var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.078,1,0.68]],["body/components/AppComponent.html",[0,0.122,1,1.142,2,1.203,3,0.259,4,0.22,5,0.96,6,0.96,7,0.96,8,0.96,9,0.22,10,2.712,11,0.96,12,1.608,13,1.493,14,2.571,15,1.109,16,5.003,17,1.109,18,4.405,19,0.384,20,0.521,21,3.91,22,2.92,23,1.02,24,2.845,25,0.816,26,2.712,27,2.044,28,2.867,29,1.142,30,4.405,31,0.751,32,0.032,33,0.662,34,0.521,35,0.69,36,3.684,37,3.243,38,0.751,39,0.751,40,1.8,41,1.8,42,2.044,43,0.816,44,3.684,45,3.243,46,0.592,47,0.384,48,2.101,49,1.221,50,1.719,51,0.259,52,0.429,53,2.101,54,1.126,55,2.712,56,0.751,57,2.362,58,2.854,59,3.243,60,2.712,61,3.243,62,2.712,63,2.712,64,0.71,65,2.335,66,2.571,67,0.96,68,1.304,69,1.304,70,0.96,71,1.588,72,0.96,73,0.96,74,0.632,75,0.96,76,0.632,77,0.96,78,0.632,79,0.96,80,0.69,81,0.96,82,0.69,83,0.526,84,0.96,85,0.632,86,0.816,87,0.96,88,0.632,89,0.96,90,0.69,91,0.96,92,0.632,93,0.96,94,0.632,95,0.96,96,0.632,97,0.751,98,0.96,99,0.578,100,0.885,101,0.96,102,0.96,103,0.021,104,0.021]],["title/modules/AppModule.html",[105,2.673,106,2.071]],["body/modules/AppModule.html",[1,1.314,3,0.234,4,0.199,9,0.199,13,0.679,32,0.032,46,0.759,47,0.347,51,0.234,52,0.388,64,0.544,74,1.094,76,1.094,78,1.094,80,1.194,82,1.194,83,0.666,85,1.094,86,0.738,88,1.094,90,1.194,92,1.094,94,1.094,96,1.094,97,0.952,99,1,103,0.02,104,0.02,106,4.285,107,1.712,108,2.663,109,2.453,110,2.453,111,2.453,112,2.453,113,2.453,114,3.276,115,3.276,116,3.438,117,2.453,118,2.137,119,2.933,120,4.11,121,4.11,122,3.438,123,3.438,124,3.438,125,4.11,126,4.11,127,1.901,128,4.11,129,2.453,130,2.137,131,2.933,132,2.933,133,1.712,134,2.453,135,2.453,136,1.901,137,2.453,138,2.933,139,2.933,140,1.901,141,2.933,142,1.901,143,2.453,144,2.453,145,2.453,146,2.453,147,4.11,148,1.712,149,4.11,150,1.712,151,2.137,152,2.933,153,2.453,154,2.933,155,2.933,156,2.933,157,2.933,158,2.933,159,1.198]],["title/modules/AppRoutingModule.html",[105,2.673,114,1.865]],["body/modules/AppRoutingModule.html",[0,0.154,3,0.29,4,0.247,9,0.247,28,1.759,32,0.032,46,0.752,47,0.43,48,2.354,51,0.29,52,0.48,64,0.628,65,2.519,66,2.773,74,0.926,76,0.926,78,0.926,88,0.926,92,0.926,94,1.032,96,1.032,97,1.101,99,0.846,103,0.023,104,0.023,107,2.12,114,2.773,122,3.038,124,3.973,133,2.12,134,3.038,135,3.038,136,2.354,137,3.038,142,2.354,143,3.038,144,3.038,145,3.038,146,3.038,153,3.038,160,3.632,161,3.632,162,4.751,163,3.431,164,1.262,165,1.165,166,6.392,167,4.751,168,3.632,169,3.632,170,3.038,171,5.828,172,2.646,173,2.646,174,2.646,175,4.751,176,3.973,177,3.632,178,3.632]],["title/guards/AuthGuard.html",[28,1.548,179,2.328]],["body/guards/AuthGuard.html",[3,0.309,4,0.263,9,0.263,14,2.262,19,0.459,20,0.459,21,4.193,23,1.148,25,0.976,28,2.4,29,1.162,31,1.148,32,0.032,33,0.655,34,0.586,35,1.054,38,1.148,39,0.898,46,0.646,47,0.459,51,0.309,52,0.513,54,1.721,56,0.898,103,0.024,104,0.024,159,2.024,164,1.346,180,3.876,181,3.241,182,5.948,183,4.814,184,2.511,185,2.352,186,3.876,187,3.211,188,3.876,189,5.756,190,5.461,191,5.756,192,3.876,193,4.955,194,2.895,195,4.144,196,5.461,197,3.876,198,2.024,199,3.876,200,1.877,201,2.511,202,2.823,203,1.722,204,3.876,205,3.876,206,1.865,207,3.876,208,3.876,209,3.876,210,3.876]],["title/interfaces/BatteryManager.html",[211,0.804,212,1.865]],["body/interfaces/BatteryManager.html",[3,0.31,4,0.264,9,0.264,19,0.46,20,0.587,23,1.149,29,1.056,31,1.149,32,0.031,33,0.656,34,0.741,35,1.056,38,1.149,39,1.334,43,1.532,51,0.31,54,2.197,103,0.024,104,0.024,211,0.977,212,2.896,213,1.881,214,3.248,215,4.817,216,5.76,217,5.76,218,4.196,219,4.961,220,4.961,221,4.961,222,6.087,223,6.087,224,6.087,225,5.466,226,3.883,227,4.961,228,4.961,229,5.466,230,3.883,231,2.382]],["title/components/CommentComponent.html",[0,0.078,74,0.623]],["body/components/CommentComponent.html",[0,0.12,1,0.665,2,1.173,3,0.249,4,0.212,5,0.925,6,0.925,7,0.925,8,0.925,9,0.212,11,0.925,12,1.6,13,1.473,15,1.081,17,1.081,19,0.37,20,0.508,23,0.995,24,2.937,25,0.786,29,1.044,31,0.724,32,0.032,33,0.649,34,0.508,35,0.665,38,0.724,39,0.995,46,0.581,47,0.37,51,0.249,52,0.413,56,0.724,64,0.568,67,0.925,68,1.271,69,1.271,70,0.925,71,1.564,72,0.925,73,0.925,74,1.03,75,0.925,76,0.609,77,0.925,78,0.609,79,0.925,80,0.665,81,0.925,82,0.665,83,0.506,84,0.925,85,0.609,86,0.786,87,0.925,88,0.609,89,0.925,90,0.665,91,0.925,92,0.609,93,0.925,94,0.609,95,0.925,96,0.609,97,0.724,98,0.925,99,0.557,100,0.853,101,0.925,102,0.925,103,0.02,104,0.02,164,1.085,170,4.903,184,2.024,185,2.005,187,2.024,232,2.613,233,4.294,234,4.907,235,4.294,236,4.294,237,3.18,238,4.294,239,3.124,240,3.124,241,2.024,242,3.124,243,4.294,244,3.849,245,4.907,246,2.507,247,3.591,248,3.124,249,3.124,250,4.294,251,3.124,252,2.613,253,4.294,254,4.294,255,4.294]],["title/injectables/CommentsService.html",[198,1.306,237,2.071]],["body/injectables/CommentsService.html",[3,0.341,4,0.29,9,0.29,14,2.493,19,0.506,20,0.623,23,1.22,25,1.075,29,1.215,31,0.99,32,0.032,33,0.565,34,0.623,35,0.909,38,0.99,40,1.745,41,1.745,43,1.075,46,0.676,47,0.506,51,0.341,52,0.565,56,0.99,103,0.025,104,0.025,148,3.479,150,2.493,194,3.027,198,2.152,200,2.069,201,2.768,206,1.608,237,3.413,256,2.768,257,3.572,258,3.333,259,5.71,260,5.961,261,3.112,262,5.267,263,3.413,264,4.272,265,5.267,266,4.272]],["title/interceptors/CommntIntInterceptor.html",[115,1.865,267,2.673]],["body/interceptors/CommntIntInterceptor.html",[3,0.326,4,0.278,9,0.278,19,0.483,23,1.187,25,1.409,29,1.09,31,0.946,32,0.032,33,0.54,34,0.483,35,0.869,38,0.946,46,0.662,47,0.483,51,0.326,52,0.54,103,0.024,104,0.024,115,2.99,150,2.384,165,1.794,194,2.967,198,2.093,200,1.978,202,2.976,206,2.107,268,4.085,269,4.68,270,3.416,271,5.122,272,4.085,273,5.122,274,5.867,275,4.68,276,5.867,277,4.085,278,4.085,279,4.085,280,5.122,281,4.085,282,4.085,283,5.122,284,4.284,285,5.122,286,5.122,287,3.416,288,4.68,289,4.085,290,4.085,291,4.085,292,4.085]],["title/components/DeletedComponent.html",[0,0.078,76,0.623]],["body/components/DeletedComponent.html",[0,0.127,1,0.74,2,1.261,3,0.278,4,0.236,5,1.029,6,1.029,7,1.029,8,1.029,9,0.236,11,1.029,12,1.623,13,1.494,15,1.162,17,1.162,19,0.412,20,0.546,23,1.07,25,0.875,29,1.103,31,0.806,32,0.032,33,0.686,34,0.546,35,0.74,38,0.806,39,0.806,46,0.613,47,0.412,51,0.278,52,0.46,56,0.806,64,0.611,67,1.029,68,1.367,69,1.367,70,1.029,71,1.634,72,1.029,73,1.029,74,0.678,75,1.029,76,1.077,77,1.029,78,0.678,79,1.029,80,0.74,81,1.029,82,0.74,83,0.977,84,1.029,85,0.678,86,0.875,87,1.029,88,0.678,89,1.029,90,0.74,91,1.029,92,0.678,93,1.029,94,0.678,95,1.029,96,0.678,97,0.806,98,1.029,99,0.62,100,0.95,101,1.029,102,1.029,103,0.022,104,0.022,174,4.022,293,2.909,294,5.183,295,4.617,296,5.183,297,4.618,298,3.478,299,1.918,300,4.617,301,4.617,302,3.478,303,1.545,304,3.478,305,3.478,306,3.478,307,3.478,308,2.448]],["title/components/FavoritesComponent.html",[0,0.078,78,0.623]],["body/components/FavoritesComponent.html",[0,0.123,1,0.695,2,1.208,3,0.261,4,0.222,5,0.966,6,0.966,7,0.966,8,0.966,9,0.222,11,0.966,12,1.61,13,1.482,15,1.114,17,1.114,19,0.386,20,0.524,23,1.025,25,0.822,29,1.068,31,0.756,32,0.032,33,0.664,34,0.524,35,0.695,38,0.756,39,0.756,46,0.637,47,0.386,51,0.261,52,0.432,56,0.756,64,0.585,67,0.966,68,1.31,69,1.31,70,0.966,71,1.593,72,0.966,73,0.966,74,0.637,75,0.966,76,0.637,77,0.966,78,1.049,79,0.966,80,0.695,81,0.966,82,0.695,83,0.962,84,0.966,85,0.637,86,0.822,87,0.966,88,0.637,89,0.966,90,0.695,91,0.966,92,0.637,93,0.966,94,0.637,95,0.966,96,0.637,97,0.756,98,0.966,99,0.581,100,0.891,101,0.966,102,0.966,103,0.021,104,0.021,164,1.134,173,3.224,184,2.115,185,2.051,187,2.115,241,2.115,299,1.744,303,1.45,308,2.853,309,2.73,310,5.02,311,4.425,312,5.02,313,3.141,314,2.867,315,4.425,316,3.264,317,1.905,318,3.264,319,3.264,320,2.73,321,2.867,322,3.701,323,2.606]],["title/components/FooterComponent.html",[0,0.078,80,0.68]],["body/components/FooterComponent.html",[0,0.109,1,0.558,2,1.036,3,0.209,4,0.178,5,0.776,6,0.776,7,0.776,8,0.776,9,0.178,11,0.776,12,1.56,13,1.436,15,0.955,17,0.955,19,0.31,20,0.528,24,1.389,29,0.949,32,0.032,33,0.502,34,0.528,40,1.821,41,1.821,43,1.23,46,0.614,47,0.31,51,0.209,52,0.347,64,0.502,67,0.776,68,1.123,69,1.123,70,0.776,71,1.446,72,0.776,73,0.776,74,0.511,75,0.776,76,0.511,77,0.776,78,0.511,79,0.776,80,1.04,81,0.776,82,0.558,83,0.425,84,0.776,85,0.511,86,0.66,87,0.776,88,0.511,89,0.776,90,0.558,91,0.776,92,0.511,93,0.776,94,0.511,95,0.776,96,0.511,97,0.607,98,0.776,99,0.467,100,0.716,101,0.776,102,0.776,103,0.018,104,0.018,194,2.011,200,1.269,206,0.987,212,2.214,215,2.191,218,3.938,231,1.428,324,2.191,325,3.793,326,4.458,327,3.793,328,5.984,329,4.458,330,4.458,331,2.214,332,2.62,333,2.62,334,2.62,335,2.62,336,4.775,337,2.62,338,2.62,339,2.62,340,5.186,341,4.887,342,4.337,343,5.406,344,2.62,345,2.62,346,3.793,347,3.793,348,2.62,349,2.62,350,2.62,351,2.62,352,2.62,353,2.62,354,1.909,355,2.62,356,2.62,357,2.62,358,2.62,359,2.62,360,2.62,361,2.62,362,2.62,363,3.793,364,2.62,365,3.793,366,3.793,367,3.793,368,3.793]],["title/components/GetTodosByhttpComponent.html",[0,0.078,82,0.68]],["body/components/GetTodosByhttpComponent.html",[0,0.133,1,0.815,2,1.343,3,0.306,4,0.26,5,1.134,6,1.134,7,1.134,8,1.134,9,0.26,11,1.134,12,1.641,13,1.511,15,1.238,17,1.238,32,0.031,33,0.65,46,0.453,47,0.453,51,0.306,52,0.507,64,0.65,67,1.134,68,1.455,69,1.455,70,1.134,71,1.696,72,1.134,73,1.134,74,0.747,75,1.134,76,0.747,77,1.134,78,0.747,79,1.134,80,0.815,81,1.134,82,1.22,83,1.044,84,1.134,85,0.747,86,0.964,87,1.134,88,0.747,89,1.134,90,0.815,91,1.134,92,0.747,93,1.134,94,0.747,95,1.134,96,0.747,97,0.887,98,1.134,99,0.682,100,1.046,101,1.134,102,1.134,103,0.023,104,0.023,151,2.79,369,3.203,370,3.203,371,5.731,372,5.431,373,4.917,374,4.113]],["title/components/ItemTodoComponent.html",[0,0.078,85,0.623]],["body/components/ItemTodoComponent.html",[0,0.103,1,0.501,2,0.958,3,0.188,4,0.16,5,0.697,6,0.697,7,0.697,8,0.697,9,0.16,11,0.697,12,1.533,13,1.411,15,0.883,17,0.883,19,0.496,20,0.415,22,2.048,23,0.813,25,0.593,27,0.963,29,1.147,31,1.076,32,0.032,33,0.689,34,0.616,35,0.988,38,1.076,39,1.15,40,0.963,41,0.963,42,1.433,43,1.357,46,0.55,47,0.279,49,0.887,50,1.249,51,0.188,52,0.312,54,0.818,56,0.546,64,0.829,67,0.697,68,1.038,69,1.038,70,0.697,71,1.374,72,0.697,73,0.697,74,0.46,75,0.697,76,0.46,77,0.697,78,0.46,79,0.697,80,0.501,81,0.697,82,0.501,83,0.753,84,0.697,85,0.906,86,1.395,87,0.697,88,0.46,89,0.697,90,0.501,91,0.697,92,0.46,93,0.697,94,0.46,95,0.697,96,0.46,97,0.971,98,0.697,99,0.42,100,0.643,101,0.697,102,0.697,103,0.017,104,0.017,140,3.59,159,1.897,164,0.818,165,0.756,184,1.527,185,1.713,187,1.527,203,1.862,211,0.593,231,0.887,241,1.527,299,1.456,303,1.047,308,1.86,314,2.274,317,1.375,321,3.373,322,2.934,323,2.249,375,4.036,376,1.717,377,3.506,378,2.934,379,2.716,380,3.054,381,3.383,382,2.934,383,3.509,384,2.274,385,2.356,386,2.048,387,2.356,388,2.048,389,2.356,390,2.356,391,2.03,392,1.748,393,2.048,394,2.048,395,2.048,396,2.048,397,2.461,398,1.559,399,2.048,400,2.048,401,2.048,402,2.048,403,1.699,404,2.048,405,2.048,406,2.048,407,2.356,408,3.383,409,2.556,410,3.884,411,1.971,412,1.971,413,1.971,414,1.971,415,1.971,416,1.971,417,1.971,418,2.048,419,2.934,420,1.971,421,1.375,422,1.375,423,1.375,424,1.971,425,1.971,426,1.971,427,1.971,428,2.934]],["title/components/LoginComponent.html",[0,0.078,88,0.623]],["body/components/LoginComponent.html",[0,0.096,1,0.453,2,0.888,3,0.17,4,0.145,5,0.63,6,0.63,7,0.63,8,0.63,9,0.145,11,0.63,12,1.505,13,1.385,15,0.818,17,0.818,19,0.252,20,0.385,23,0.753,24,2.339,25,0.536,27,1.611,28,2.523,29,1.172,31,0.493,32,0.032,33,0.711,34,0.636,35,0.692,38,0.753,39,0.753,40,1.611,41,1.611,42,1.611,43,1.352,46,0.593,47,0.252,48,1.38,49,0.802,50,1.129,51,0.17,52,0.282,53,1.38,54,0.74,56,0.753,58,1.38,64,0.43,65,3.17,67,0.63,68,0.962,69,0.962,70,0.63,71,1.306,72,0.63,73,0.63,74,0.415,75,0.63,76,0.415,77,0.63,78,0.415,79,0.63,80,0.453,81,0.63,82,0.453,83,0.345,84,0.63,85,0.415,86,0.536,87,0.63,88,0.86,89,0.63,90,0.453,91,0.63,92,0.415,93,0.63,94,0.415,95,0.63,96,0.415,97,0.493,98,0.63,99,0.379,100,0.581,101,0.63,102,0.63,103,0.015,104,0.015,127,2.106,148,1.243,159,1.328,164,0.74,165,1.415,172,1.551,185,1.941,203,1.751,244,1.551,246,1.897,258,1.897,263,1.38,284,1.781,323,1.574,354,1.551,429,1.781,430,3.943,431,3.25,432,3.246,433,2.718,434,3.25,435,3.96,436,3.974,437,3.246,438,1.551,439,3.25,440,4.357,441,3.25,442,2.129,443,2.129,444,2.129,445,3.297,446,2.129,447,2.129,448,2.129,449,2.129,450,1.781,451,1.781,452,1.781,453,2.129,454,2.129,455,2.129,456,1.781,457,2.129,458,3.943,459,3.639,460,3.25,461,4.189,462,2.129,463,2.718,464,2.129,465,3.25,466,4.752,467,2.129,468,2.129,469,2.129,470,2.129,471,2.129,472,2.129,473,2.129,474,1.781,475,2.129,476,2.129,477,2.129,478,2.129,479,1.781,480,2.129,481,2.129,482,2.129,483,2.129,484,2.129,485,3.25,486,1.781,487,1.781,488,1.781,489,2.129,490,2.129,491,1.781,492,2.872,493,2.129,494,1.781,495,3.25,496,2.129,497,1.781,498,2.129,499,2.129,500,1.781,501,1.551,502,1.781,503,1.781,504,2.718,505,3.25]],["title/components/NavbarComponent.html",[0,0.078,90,0.68]],["body/components/NavbarComponent.html",[0,0.094,1,0.432,2,0.856,3,0.162,4,0.138,5,0.601,6,0.601,7,0.601,8,0.601,9,0.138,11,0.601,12,1.491,13,1.413,15,0.789,17,0.789,19,0.24,20,0.371,21,3.135,23,0.726,24,2.94,25,0.511,26,1.698,27,1.564,28,2.481,29,1.201,31,0.47,32,0.032,33,0.569,34,0.371,35,0.432,36,2.621,38,1.187,39,1.327,40,1.564,41,1.564,42,1.758,43,0.789,46,0.55,47,0.24,48,1.316,49,0.764,50,1.076,51,0.162,52,0.269,53,3.32,55,1.698,56,0.47,57,1.479,58,3.185,60,3.599,62,1.698,63,1.698,64,0.65,65,2.805,66,1.829,67,0.601,68,0.928,69,0.928,70,0.601,71,1.274,72,0.601,73,0.601,74,0.396,75,0.601,76,0.396,77,0.601,78,0.396,79,0.601,80,0.432,81,0.601,82,0.432,83,0.329,84,0.601,85,0.396,86,0.511,87,0.601,88,0.396,89,0.601,90,0.916,91,0.601,92,0.396,93,0.601,94,0.396,95,0.601,96,0.396,97,0.47,98,0.601,99,0.362,100,0.554,101,0.601,102,0.601,103,0.015,104,0.015,164,0.705,165,0.651,172,3.135,173,3.135,174,3.135,185,2.093,206,1.441,246,1.185,258,1.829,275,1.698,299,1.329,303,0.902,313,2.512,314,2.031,317,1.185,320,1.698,392,0.764,397,1.912,398,0.902,479,1.698,488,1.698,492,1.479,506,1.698,507,3.134,508,3.827,509,3.134,510,4.541,511,4.425,512,4.425,513,4.425,514,3.599,515,4.303,516,3.134,517,2.03,518,2.03,519,2.03,520,2.03,521,2.03,522,2.03,523,2.03,524,3.201,525,2.03,526,2.03,527,4.303,528,4.425,529,4.651,530,2.03,531,2.03,532,1.698,533,2.03,534,2.03,535,2.03,536,3.134,537,3.388,538,3.134,539,3.134,540,2.03,541,2.03,542,2.03,543,2.03,544,2.03,545,2.03,546,2.03,547,2.03,548,2.03,549,2.03,550,2.03,551,2.03,552,2.03,553,2.03,554,2.03,555,2.03,556,2.03,557,2.03,558,2.03,559,4.425]],["title/interfaces/Navigator.html",[211,0.804,560,2.328]],["body/interfaces/Navigator.html",[3,0.385,4,0.327,9,0.327,19,0.57,20,0.67,32,0.031,34,0.57,46,0.57,51,0.385,103,0.027,104,0.027,195,4.027,211,1.212,212,3.304,213,2.332,560,4.124,561,4.027,562,6.205,563,5.661]],["title/components/NotFoundComponent.html",[0,0.078,92,0.623]],["body/components/NotFoundComponent.html",[0,0.134,1,0.833,2,1.362,3,0.313,4,0.266,5,1.158,6,1.158,7,1.158,8,1.158,9,0.266,11,1.158,12,1.645,13,1.514,15,1.255,17,1.255,32,0.031,33,0.66,46,0.463,47,0.463,51,0.313,52,0.518,64,0.66,67,1.158,68,1.476,69,1.476,70,1.158,71,1.71,72,1.158,73,1.158,74,0.763,75,1.158,76,0.763,77,1.158,78,0.763,79,1.158,80,0.833,81,1.158,82,0.833,83,0.635,84,1.158,85,0.763,86,0.985,87,1.158,88,0.763,89,1.158,90,0.833,91,1.158,92,1.127,93,1.158,94,0.763,95,1.158,96,0.763,97,0.907,98,1.158,99,0.697,100,1.069,101,1.158,102,1.158,103,0.024,104,0.024,136,2.536,176,4.831,374,4.17,564,3.274,565,3.274,566,5.487,567,4.986]],["title/components/RegisterComponent.html",[0,0.078,94,0.623]],["body/components/RegisterComponent.html",[0,0.107,1,0.54,2,1.011,3,0.202,4,0.172,5,0.75,6,0.75,7,0.75,8,0.75,9,0.172,11,0.75,12,1.552,13,1.428,15,0.932,17,0.932,19,0.3,20,0.438,23,0.858,25,0.638,27,1.788,29,0.931,31,0.587,32,0.032,33,0.815,34,0.438,35,0.54,38,0.587,39,0.587,46,0.606,47,0.3,49,1.812,50,1.344,51,0.202,52,0.335,56,0.587,57,1.847,64,0.49,65,1.344,66,3.303,67,0.75,68,1.096,69,1.096,70,0.75,71,1.424,72,0.75,73,0.75,74,0.494,75,0.75,76,0.494,77,0.75,78,0.494,79,0.75,80,0.54,81,0.75,82,0.54,83,0.411,84,0.75,85,0.494,86,0.638,87,0.75,88,0.494,89,0.75,90,0.54,91,0.75,92,0.494,93,0.75,94,0.938,95,0.75,96,0.494,97,0.587,98,0.75,99,0.452,100,0.692,101,0.75,102,0.75,103,0.018,104,0.018,127,1.643,164,0.881,165,1.543,185,2.091,203,2.137,244,1.847,246,2.162,247,2.121,252,2.121,323,1.794,354,1.847,391,0.955,392,0.955,432,3.932,435,3.965,436,3.097,437,3.118,438,1.847,440,4.616,445,4.024,450,4.024,451,2.121,452,3.097,456,2.121,459,2.835,461,4.47,463,2.121,486,2.121,491,2.121,492,3.188,494,2.121,500,2.121,501,1.847,502,2.121,503,2.121,504,3.097,537,1.847,568,2.121,569,4.375,570,3.704,571,4.375,572,4.375,573,3.704,574,2.536,575,3.704,576,3.704,577,2.536,578,2.536,579,2.536,580,2.536,581,2.536,582,2.536,583,2.121,584,2.536,585,1.48,586,2.536,587,2.536,588,2.536,589,2.536,590,2.536,591,2.536,592,3.704,593,2.536,594,2.536,595,2.536,596,2.536,597,2.536,598,3.704,599,5.345,600,5.345,601,3.704,602,3.097,603,3.704]],["title/interfaces/Todo.html",[64,0.423,211,0.804]],["body/interfaces/Todo.html",[0,0.11,3,0.266,4,0.226,9,0.226,12,0.838,13,0.772,15,0.838,17,0.838,19,0.6,20,0.531,27,1.361,32,0.032,34,0.6,39,0.772,42,1.361,43,1.426,46,0.642,47,0.394,49,1.254,50,1.766,51,0.266,52,0.441,54,1.762,56,0.772,64,0.834,83,0.54,85,0.649,86,1.276,103,0.021,104,0.021,140,2.158,159,1.833,164,1.157,165,1.068,185,1.361,203,2.253,211,0.838,213,1.613,231,1.909,241,2.158,299,1.157,303,1.479,317,1.944,375,2.426,376,2.426,377,2.785,378,2.785,379,2.158,380,2.426,381,2.426,384,2.158,386,1.944,388,1.944,391,2.245,392,1.909,393,1.944,394,1.944,395,1.944,396,1.944,397,2.693,398,1.479,399,1.944,400,1.944,401,1.944,402,1.944,403,1.613,404,1.944,405,1.944,406,1.944,408,3.953,409,3.268,410,4.538,411,2.785,412,2.785,413,2.785,414,2.785,415,2.785,416,2.785,417,2.785,418,2.618,419,3.751,420,2.785,421,1.944,422,1.944,423,1.944,424,2.785,425,2.785,426,2.785,427,2.785]],["title/interfaces/Todo-1.html",[64,0.353,211,0.672,392,1.005]],["body/interfaces/Todo-1.html",[0,0.101,3,0.237,4,0.202,9,0.202,12,0.747,13,0.688,15,0.747,17,0.747,19,0.644,20,0.491,22,1.733,32,0.032,33,0.393,34,0.565,39,1.106,42,1.951,43,1.508,46,0.491,47,0.351,51,0.237,52,0.393,54,1.659,56,0.688,64,0.855,83,0.481,99,0.529,100,0.811,103,0.02,104,0.02,133,1.733,159,1.693,165,1.806,206,1.561,211,0.747,213,1.438,231,1.946,299,1.031,303,1.319,313,1.733,331,2.419,384,1.924,386,1.733,388,1.733,391,2.256,392,2.221,393,1.733,394,1.733,395,1.733,396,1.733,397,2.662,398,1.319,399,1.733,400,1.733,401,1.733,402,1.733,403,1.438,404,1.733,405,1.733,406,1.733,418,1.733,421,1.733,422,1.733,423,1.733,437,2.686,585,1.733,604,1.924,605,2.163,606,2.483,607,2.483,608,2.483,609,3.479,610,2.163,611,2.483,612,3.467,613,2.163,614,2.483,615,2.483,616,4.323,617,4.323,618,3.02,619,3.467,620,3.467,621,2.483,622,2.163,623,3.02,624,2.483,625,2.163,626,2.483,627,3.02,628,2.483,629,2.483]],["title/components/TodoDetailsComponentComponent.html",[0,0.078,96,0.623]],["body/components/TodoDetailsComponentComponent.html",[0,0.116,1,0.454,2,0.888,3,0.17,4,0.145,5,0.631,6,0.631,7,0.631,8,0.631,9,0.145,11,0.631,12,1.505,13,1.385,15,0.819,17,0.819,19,0.252,20,0.385,23,0.754,24,2.34,25,0.537,29,1.248,31,0.494,32,0.032,33,0.522,34,0.593,35,0.454,38,1.101,39,1.161,43,0.819,46,0.522,47,0.252,51,0.17,52,0.282,56,0.754,64,0.798,67,0.631,68,0.963,69,0.963,70,0.631,71,1.307,72,0.631,73,0.631,74,0.416,75,0.631,76,0.416,77,0.631,78,0.416,79,0.631,80,0.454,81,0.631,82,0.454,83,0.939,84,0.631,85,0.416,86,0.537,87,0.631,88,0.416,89,0.631,90,0.454,91,0.631,92,0.416,93,0.631,94,0.416,95,0.631,96,0.861,97,1.503,98,0.631,99,0.38,100,0.582,101,0.631,102,0.631,103,0.015,104,0.015,142,3.84,164,0.74,165,1.415,185,2.196,206,1.485,231,0.803,258,2.577,299,1.37,303,0.947,308,1.725,314,2.108,317,1.899,321,2.861,323,2.138,381,1.553,382,2.721,391,1.79,397,1.445,409,2.874,428,3.692,438,1.553,497,2.721,604,3.84,630,1.783,631,3.945,632,3.253,633,3.253,634,3.253,635,3.692,636,2.721,637,3.945,638,3.945,639,4.415,640,4.754,641,3.253,642,2.132,643,2.132,644,2.132,645,2.132,646,2.132,647,2.132,648,2.132,649,2.721,650,2.132,651,2.132,652,2.132,653,2.132,654,2.132,655,2.132,656,2.132,657,3.253,658,2.132,659,2.132,660,3.253,661,4.415,662,2.132,663,3.945,664,2.132,665,2.132,666,2.132,667,2.132,668,4.415,669,2.132,670,3.253,671,2.132,672,2.132,673,2.132,674,2.132,675,2.132,676,2.132,677,2.132,678,2.132,679,2.132,680,2.132,681,1.783,682,2.132,683,2.132,684,2.132,685,3.253,686,3.253,687,2.721,688,3.253,689,3.253,690,3.253]],["title/components/TodoListComponent.html",[0,0.078,99,0.569]],["body/components/TodoListComponent.html",[0,0.097,1,0.456,2,0.892,3,0.171,4,0.146,5,0.634,6,0.634,7,0.634,8,0.634,9,0.146,11,0.634,12,1.507,13,1.387,15,0.822,17,0.822,19,0.564,20,0.387,22,1.907,23,0.757,25,0.539,29,1.197,31,0.917,32,0.032,33,0.664,34,0.618,35,0.842,38,1.026,39,1.21,40,1.617,41,1.617,42,1.809,43,1.44,46,0.387,47,0.254,51,0.171,52,0.284,54,0.744,56,0.497,64,0.85,67,0.634,68,0.967,69,0.967,70,0.634,71,1.31,72,0.634,73,0.634,74,0.418,75,0.634,76,0.418,77,0.634,78,0.418,79,0.634,80,0.456,81,0.634,82,0.456,83,0.718,84,0.634,85,0.418,86,0.539,87,0.634,88,0.418,89,0.634,90,0.456,91,0.634,92,0.418,93,0.634,94,0.418,95,0.634,96,0.418,97,0.497,98,0.634,99,0.789,100,1.081,101,0.634,102,0.634,103,0.016,104,0.016,133,3.339,159,1.809,165,1.61,206,1.23,211,0.539,231,1.23,299,1.375,303,0.952,308,1.732,313,2.584,321,2.869,331,1.907,379,2.117,384,2.117,386,1.907,388,1.251,391,2.077,392,2.077,393,1.907,394,1.907,395,1.907,396,1.907,397,2.45,398,1.451,399,1.907,400,1.907,401,1.907,402,1.907,403,1.582,404,1.907,405,1.907,406,1.907,418,1.251,421,1.251,422,1.251,423,1.251,437,3.088,585,1.251,604,3.707,605,1.561,606,2.732,607,3.31,608,1.792,609,3.472,610,2.884,611,1.792,612,3.702,613,1.561,614,1.792,615,1.792,616,3.702,617,3.702,618,2.38,619,2.732,620,2.732,621,1.792,622,1.561,623,2.38,624,1.792,625,1.561,626,1.792,627,2.38,628,1.792,629,1.792,636,2.732,691,2.143,692,2.143,693,2.143,694,2.143,695,2.143,696,2.143,697,2.143,698,2.143,699,2.143,700,2.143,701,2.143,702,2.143,703,2.143,704,3.267,705,2.732]],["title/interfaces/Todos.html",[83,0.518,211,0.804]],["body/interfaces/Todos.html",[3,0.348,4,0.296,9,0.296,19,0.516,20,0.631,32,0.031,34,0.741,35,1.333,43,1.577,51,0.348,54,2.225,64,0.794,83,0.864,103,0.025,104,0.025,211,1.097,213,2.11,231,2.169,323,2.79,391,2.26,397,2.666,706,3.644,707,6.002,708,6.002,709,4.357]],["title/injectables/TodosService.html",[198,1.306,299,1.11]],["body/injectables/TodosService.html",[3,0.149,4,0.127,9,0.127,14,1.089,19,0.626,20,0.347,22,2.4,23,0.68,25,0.47,29,1.289,31,1.1,32,0.032,33,0.628,34,0.664,35,1.01,38,1.319,39,1.15,40,1.827,41,1.827,42,2.102,43,1.433,46,0.487,47,0.221,51,0.149,52,0.247,54,0.648,56,0.432,64,0.657,83,0.982,103,0.014,104,0.014,148,2.4,150,1.089,159,2.102,165,1.736,194,2.37,198,1.199,200,0.904,201,1.209,206,2.233,231,1.937,256,1.209,261,1.36,263,1.902,297,3.439,299,1.019,308,1.556,313,2.4,323,2.299,331,1.089,342,3.034,379,1.902,380,2.138,386,1.713,388,1.713,391,1.87,392,1.937,393,1.713,394,1.713,395,1.713,396,1.713,397,2.109,398,1.304,399,1.713,400,1.713,401,1.713,402,1.713,403,1.421,404,1.713,405,1.713,406,1.713,418,2.117,421,1.089,422,1.089,423,1.713,511,3.97,512,3.739,513,3.739,609,2.642,610,2.642,613,4.089,618,2.138,622,1.36,623,1.36,625,2.138,627,2.138,635,2.455,649,2.455,681,2.455,687,2.455,710,1.561,711,4.747,712,2.935,713,2.935,714,2.935,715,2.935,716,4.112,717,2.935,718,4.112,719,4.112,720,2.935,721,1.866,722,1.866,723,1.866,724,1.866,725,1.866,726,2.935,727,1.866,728,1.866,729,1.866,730,1.866,731,1.866,732,1.866,733,1.866,734,1.866,735,1.866,736,1.866,737,1.866,738,1.866,739,1.866,740,1.866,741,1.866,742,1.866,743,1.866,744,1.866,745,1.866,746,1.866,747,1.866,748,1.866,749,1.866,750,1.866,751,5.144,752,1.866,753,2.935,754,1.866,755,1.866,756,1.866,757,1.866,758,1.866,759,1.866,760,1.866,761,1.866,762,1.866,763,2.935,764,1.866,765,3.627,766,1.866,767,2.935,768,1.866,769,1.866,770,1.561,771,1.866,772,1.866,773,2.935,774,2.935,775,1.866,776,2.935,777,1.866]],["title/interfaces/Users.html",[49,1.203,211,0.804]],["body/interfaces/Users.html",[3,0.345,4,0.294,9,0.294,19,0.511,20,0.628,32,0.031,33,0.792,34,0.749,43,1.673,49,1.996,51,0.345,103,0.025,104,0.025,211,1.087,213,2.091,231,2.16,391,2.253,432,3.877,435,3.877,459,3.877,583,5.004,585,3.492,778,3.612]],["title/injectables/UsersAuthService.html",[27,1.306,198,1.306]],["body/injectables/UsersAuthService.html",[3,0.113,4,0.097,9,0.097,14,0.829,19,0.168,20,0.279,23,0.545,25,0.357,27,0.962,29,1.205,31,0.812,32,0.032,33,0.688,34,0.616,35,0.746,38,1.075,39,0.545,40,1.812,41,1.812,42,2.126,43,1.57,46,0.415,47,0.168,49,2.085,51,0.113,52,0.188,53,2.874,54,1.35,56,0.329,58,2.271,65,2.221,66,1.374,103,0.011,104,0.011,148,2.046,150,0.829,159,1.967,165,1.815,194,2.699,198,0.962,200,0.688,201,0.92,203,0.631,206,2.323,246,1.759,256,0.92,258,3.389,261,1.035,263,1.525,287,1.188,288,1.188,391,1.463,392,1.135,398,1.045,403,0.688,408,1.715,432,3.12,433,2.52,435,3.877,459,3.668,474,3.71,487,2.52,510,2.52,514,3.25,524,1.188,528,4.151,532,1.188,537,3.709,559,3.503,585,2.445,779,4.778,780,1.188,781,3.014,782,3.014,783,3.014,784,4.189,785,3.886,786,2.353,787,2.353,788,1.42,789,5.302,790,1.42,791,1.42,792,1.42,793,4.436,794,1.42,795,1.42,796,2.353,797,1.42,798,2.353,799,1.42,800,2.353,801,1.42,802,1.42,803,1.42,804,1.42,805,1.42,806,1.42,807,1.42,808,1.42,809,1.42,810,1.42,811,1.42,812,1.42,813,3.014,814,1.42,815,3.014,816,2.353,817,1.42,818,2.353,819,2.353,820,2.353,821,1.42,822,1.42,823,1.42,824,3.014,825,3.505,826,3.014,827,2.353,828,4.641,829,1.42,830,2.353,831,2.353,832,3.886,833,1.42,834,1.42,835,1.42,836,2.353,837,1.42,838,3.886,839,3.505,840,3.886,841,3.014,842,3.014,843,3.014,844,2.353,845,3.014,846,3.014,847,3.505,848,1.42,849,1.42,850,1.42,851,1.42,852,1.42,853,1.42,854,1.42,855,1.42,856,1.42,857,1.42,858,1.42,859,1.188,860,1.42,861,1.42,862,1.42,863,1.42,864,1.42,865,1.42,866,1.42,867,2.353,868,1.42,869,1.42,870,1.42,871,1.42,872,1.42,873,1.42,874,1.42,875,1.42,876,2.353]],["title/coverage.html",[877,3.647]],["body/coverage.html",[0,0.157,1,0.759,9,0.242,10,2.983,27,1.457,28,1.727,32,0.031,34,0.422,49,1.343,64,0.621,74,0.695,76,0.695,78,0.695,80,0.759,82,0.759,83,0.851,85,0.695,88,0.695,90,0.759,92,0.695,94,0.695,96,0.695,97,1.088,99,0.635,103,0.022,104,0.022,115,2.082,133,2.74,136,2.311,140,3.042,142,2.311,151,2.598,179,2.598,181,2.983,198,2.144,203,1.584,211,1.497,212,2.082,214,2.983,232,2.983,237,2.311,257,2.983,267,2.983,269,2.983,270,2.983,293,2.983,299,1.239,309,2.983,324,2.983,331,3.859,369,2.983,370,2.983,375,3.42,376,3.42,429,2.983,506,2.983,560,2.598,561,2.983,564,2.983,565,2.983,568,2.983,604,3.4,605,3.42,630,2.983,706,2.983,710,2.983,778,2.983,779,2.983,780,2.983,877,2.983,878,3.566,879,3.566,880,3.566,881,3.566,882,3.566,883,6.154,884,3.566,885,4.694,886,4.694,887,4.694,888,4.694,889,3.566,890,4.694,891,3.566,892,3.566,893,3.566,894,3.566]],["title/dependencies.html",[108,2.49,895,1.944]],["body/dependencies.html",[32,0.032,47,0.547,103,0.026,104,0.026,108,2.996,123,3.866,127,2.996,129,4.621,130,4.025,164,1.606,200,2.239,218,3.368,336,3.866,896,4.623,897,6.473,898,4.623,899,4.623,900,4.623,901,4.623,902,4.623,903,4.623,904,4.623,905,4.623,906,4.623,907,4.623,908,4.623,909,4.623]],["title/index.html",[19,0.316,910,2.669,911,2.669]],["body/index.html",[0,0.137,4,0.278,32,0.024,33,0.542,44,3.424,103,0.024,104,0.024,118,2.982,183,3.424,202,2.982,203,1.818,501,2.982,705,3.424,859,3.424,895,2.982,912,5.129,913,4.094,914,5.601,915,5.601,916,3.424,917,4.094,918,4.094,919,5.129,920,6.047,921,6.26,922,4.094,923,4.094,924,4.094,925,4.094,926,4.094,927,4.094,928,4.094,929,4.094,930,4.094,931,4.094,932,5.601,933,5.601,934,4.094,935,5.872,936,4.094,937,4.094,938,4.094,939,4.094,940,5.129,941,5.129,942,5.872,943,4.094,944,5.129,945,5.129,946,4.094,947,6.17,948,4.094,949,4.094,950,4.094,951,5.129,952,4.094,953,4.094,954,4.094,955,4.094,956,4.094,957,5.601,958,4.094,959,4.094,960,2.982,961,4.094]],["title/modules.html",[107,2.546]],["body/modules.html",[32,0.028,103,0.028,104,0.028,106,3.281,107,2.956,114,2.956,130,3.689,962,5.064,963,5.064,964,5.829,965,5.064,966,5.064]],["title/overview.html",[960,3.177]],["body/overview.html",[1,1.32,2,1.073,32,0.031,74,1.072,76,1.072,78,1.072,80,1.17,82,1.17,85,1.072,88,1.072,90,1.17,92,1.072,94,1.072,96,1.072,99,0.979,103,0.024,104,0.024,106,4.351,107,2.294,108,3.239,109,3.287,110,3.287,111,3.287,112,3.287,113,3.287,114,3.209,115,3.209,116,4.181,117,3.287,118,2.863,163,2.547,179,2.863,213,1.903,256,2.547,392,1.48,398,1.746,403,1.903,602,3.287,770,3.287,960,2.863,967,3.93]],["title/properties.html",[20,0.455,895,1.944]],["body/properties.html",[20,0.609,32,0.029,103,0.028,104,0.028,916,4.301,968,5.143]],["title/routes.html",[163,2.826]],["body/routes.html",[32,0.028,103,0.028,104,0.028,163,3.359]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":331,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":968,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["0lelplr",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{}}}],["1",{"_index":392,"title":{"interfaces/Todo-1.html":{}},"body":{"components/ItemTodoComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{},"overview.html":{}}}],["1.1.19",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":770,"title":{},"body":{"injectables/TodosService.html":{},"overview.html":{}}}],["100",{"_index":342,"title":{},"body":{"components/FooterComponent.html":{},"injectables/TodosService.html":{}}}],["123",{"_index":819,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["13",{"_index":967,"title":{},"body":{"overview.html":{}}}],["15.2.0",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["15.2.4",{"_index":917,"title":{},"body":{"index.html":{}}}],["1].id",{"_index":620,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["2",{"_index":398,"title":{},"body":{"components/ItemTodoComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{},"overview.html":{}}}],["2.3.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":365,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":403,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{},"overview.html":{}}}],["3.0.0",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":602,"title":{},"body":{"components/RegisterComponent.html":{},"overview.html":{}}}],["60",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["7.8.0",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["_activateroute",{"_index":639,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["_auth",{"_index":439,"title":{},"body":{"components/LoginComponent.html":{}}}],["_auth:usersauthservice",{"_index":457,"title":{},"body":{"components/LoginComponent.html":{}}}],["_comment",{"_index":236,"title":{},"body":{"components/CommentComponent.html":{}}}],["_comment:commentsservice",{"_index":242,"title":{},"body":{"components/CommentComponent.html":{}}}],["_id",{"_index":670,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["_router",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"components/CommentComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{}}}],["_router:router,private",{"_index":241,"title":{},"body":{"components/CommentComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["_todos",{"_index":314,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/NavbarComponent.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["_todos.gettodobyid(this.id",{"_index":665,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["_todos:todosservice",{"_index":317,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["_todoserves",{"_index":693,"title":{},"body":{"components/TodoListComponent.html":{}}}],["_todoserves:todosservice",{"_index":608,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["accessors",{"_index":636,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["activatedroute",{"_index":640,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["activatedroutesnapshot",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["add",{"_index":705,"title":{},"body":{"components/TodoListComponent.html":{},"index.html":{}}}],["addeventlistener",{"_index":219,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["addeventlistener(type",{"_index":221,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["addeventlisteneroptions",{"_index":225,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["address",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["addtodo",{"_index":715,"title":{},"body":{"injectables/TodosService.html":{}}}],["addtodo(todos",{"_index":721,"title":{},"body":{"injectables/TodosService.html":{}}}],["addtodo(todos:todos",{"_index":747,"title":{},"body":{"injectables/TodosService.html":{}}}],["angular",{"_index":914,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["angular/compiler",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CommentComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoDetailsComponentComponent.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["app.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":926,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{}}}],["appmodule",{"_index":106,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":114,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":862,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["artifacts",{"_index":936,"title":{},"body":{"index.html":{}}}],["assuming",{"_index":536,"title":{},"body":{"components/NavbarComponent.html":{}}}],["auth",{"_index":287,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{},"injectables/UsersAuthService.html":{}}}],["auth.guard",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["auth.service",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{}}}],["auth.service.ts",{"_index":780,"title":{},"body":{"injectables/UsersAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:12",{"_index":803,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:13",{"_index":807,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:14",{"_index":804,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:141",{"_index":797,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:16",{"_index":802,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:17",{"_index":806,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:177",{"_index":799,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:18",{"_index":808,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:19",{"_index":805,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:197",{"_index":795,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:206",{"_index":792,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:21",{"_index":787,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:210",{"_index":788,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:221",{"_index":791,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:226",{"_index":790,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:66",{"_index":801,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["auth.service.ts:77",{"_index":794,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["authguard",{"_index":28,"title":{"guards/AuthGuard.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["authrequest",{"_index":291,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["authservice",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["automatically",{"_index":927,"title":{},"body":{"index.html":{}}}],["available",{"_index":966,"title":{},"body":{"modules.html":{}}}],["baseurl",{"_index":781,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["basket",{"_index":551,"title":{},"body":{"components/NavbarComponent.html":{}}}],["battery",{"_index":336,"title":{},"body":{"components/FooterComponent.html":{},"dependencies.html":{}}}],["battery$.subscribe((battery",{"_index":348,"title":{},"body":{"components/FooterComponent.html":{}}}],["battery.addeventlistener('chargingchange",{"_index":347,"title":{},"body":{"components/FooterComponent.html":{}}}],["battery.addeventlistener('levelchange",{"_index":346,"title":{},"body":{"components/FooterComponent.html":{}}}],["battery.charging",{"_index":350,"title":{},"body":{"components/FooterComponent.html":{}}}],["battery.level",{"_index":355,"title":{},"body":{"components/FooterComponent.html":{}}}],["batterylevel",{"_index":328,"title":{},"body":{"components/FooterComponent.html":{}}}],["batterylevel().then(level",{"_index":360,"title":{},"body":{"components/FooterComponent.html":{}}}],["batterymanager",{"_index":212,"title":{"interfaces/BatteryManager.html":{}},"body":{"interfaces/BatteryManager.html":{},"components/FooterComponent.html":{},"interfaces/Navigator.html":{},"coverage.html":{}}}],["batterystatus",{"_index":329,"title":{},"body":{"components/FooterComponent.html":{}}}],["batterystatuscolor",{"_index":330,"title":{},"body":{"components/FooterComponent.html":{}}}],["bearer",{"_index":286,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["behaviorsubject",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["behaviorsubject(false",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UsersAuthService.html":{}}}],["body).pipe",{"_index":841,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["boolean",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["bootstrap",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["browse",{"_index":964,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":935,"title":{},"body":{"index.html":{}}}],["byhttp",{"_index":371,"title":{},"body":{"components/GetTodosByhttpComponent.html":{}}}],["byhttp'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["byhttp.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["byhttp.component.css",{"_index":372,"title":{},"body":{"components/GetTodosByhttpComponent.html":{}}}],["byhttp.component.html",{"_index":373,"title":{},"body":{"components/GetTodosByhttpComponent.html":{}}}],["byhttp.component.ts",{"_index":370,"title":{},"body":{"components/GetTodosByhttpComponent.html":{},"coverage.html":{}}}],["byhttp/get",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/GetTodosByhttpComponent.html":{},"coverage.html":{}}}],["canactivate",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate:[authguard",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["capabilities",{"_index":955,"title":{},"body":{"index.html":{}}}],["capitals",{"_index":402,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["care",{"_index":396,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["catcherror",{"_index":809,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["catcherror((error",{"_index":845,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["categories",{"_index":745,"title":{},"body":{"injectables/TodosService.html":{}}}],["change",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["characters",{"_index":603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["charging",{"_index":215,"title":{},"body":{"interfaces/BatteryManager.html":{},"components/FooterComponent.html":{}}}],["chargingtime",{"_index":216,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["check",{"_index":859,"title":{},"body":{"injectables/UsersAuthService.html":{},"index.html":{}}}],["choice",{"_index":950,"title":{},"body":{"index.html":{}}}],["class",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["classic",{"_index":405,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["cleardeleted",{"_index":716,"title":{},"body":{"injectables/TodosService.html":{}}}],["cli",{"_index":915,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":930,"title":{},"body":{"index.html":{}}}],["command",{"_index":951,"title":{},"body":{"index.html":{}}}],["comment",{"_index":233,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["comment.body",{"_index":254,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.css",{"_index":234,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":235,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.id",{"_index":253,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["comment[0][0].body",{"_index":255,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentcomponent",{"_index":74,"title":{"components/CommentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["comments",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{}}}],["comments.service",{"_index":240,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentsservice",{"_index":237,"title":{"injectables/CommentsService.html":{}},"body":{"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"coverage.html":{}}}],["commentsurl",{"_index":259,"title":{},"body":{"injectables/CommentsService.html":{}}}],["commnt",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["commntintinterceptor",{"_index":115,"title":{"interceptors/CommntIntInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CommntIntInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["complete",{"_index":428,"title":{},"body":{"components/ItemTodoComponent.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["completed",{"_index":397,"title":{},"body":{"components/ItemTodoComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{}}}],["completedcount",{"_index":761,"title":{},"body":{"injectables/TodosService.html":{}}}],["completedicon",{"_index":638,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["completedpercentage",{"_index":511,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/TodosService.html":{}}}],["completedpercentage():any",{"_index":555,"title":{},"body":{"components/NavbarComponent.html":{}}}],["completedtodos",{"_index":773,"title":{},"body":{"injectables/TodosService.html":{}}}],["completedtodos.length",{"_index":774,"title":{},"body":{"injectables/TodosService.html":{}}}],["compodoc/compodoc",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["component.component",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.css",{"_index":631,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.html",{"_index":632,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts",{"_index":630,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:14",{"_index":642,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:16",{"_index":651,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:17",{"_index":648,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:18",{"_index":650,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:19",{"_index":641,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:35",{"_index":647,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:57",{"_index":646,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:71",{"_index":644,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:74",{"_index":645,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:77",{"_index":643,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:83",{"_index":653,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component.component.ts:87",{"_index":655,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["component/todo",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TodoDetailsComponentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["confirm",{"_index":598,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.error('error",{"_index":846,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["console.log",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["console.log(\"error",{"_index":548,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log('error",{"_index":858,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["console.log('logged",{"_index":490,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('login",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('registered",{"_index":596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('registration",{"_index":592,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(_id",{"_index":672,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["console.log(_todos.gettodobyid(this.id",{"_index":666,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["console.log(error",{"_index":247,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(isloggedin",{"_index":531,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(next",{"_index":546,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(response",{"_index":834,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["console.log(result",{"_index":252,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(this._activateroute.snapshot.params['id",{"_index":659,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["console.log(this.comments",{"_index":250,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.deletedtodos",{"_index":307,"title":{},"body":{"components/DeletedComponent.html":{}}}],["console.log(this.id",{"_index":669,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["console.log(this.isloggedin",{"_index":532,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UsersAuthService.html":{}}}],["console.log(this.registerform.value",{"_index":594,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.todos",{"_index":622,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["console.log(this.todos.filter(todo",{"_index":766,"title":{},"body":{"injectables/TodosService.html":{}}}],["const",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/CommntIntInterceptor.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["constructor(_router",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"components/CommentComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{}}}],["constructor(_todoserves",{"_index":691,"title":{},"body":{"components/TodoListComponent.html":{}}}],["constructor(authservice",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["constructor(http",{"_index":261,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["constructor(private",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["constructor(router",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["constructor(todoservice",{"_index":298,"title":{},"body":{"components/DeletedComponent.html":{}}}],["content",{"_index":472,"title":{},"body":{"components/LoginComponent.html":{}}}],["copy",{"_index":364,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyright",{"_index":363,"title":{},"body":{"components/FooterComponent.html":{}}}],["coverage",{"_index":877,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currentuser",{"_index":510,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UsersAuthService.html":{}}}],["currentuser:string=localstorage.getitem('currentuser",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["data",{"_index":836,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["data={email:\"\",password",{"_index":454,"title":{},"body":{"components/LoginComponent.html":{}}}],["declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentsService.html":{},"components/FooterComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["delete",{"_index":321,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["delete(todo",{"_index":384,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["delete(todo:todo):void",{"_index":414,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["deleted",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DeletedComponent.html":{},"components/NavbarComponent.html":{}}}],["deleted'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["deleted.component.css",{"_index":294,"title":{},"body":{"components/DeletedComponent.html":{}}}],["deleted.component.html",{"_index":295,"title":{},"body":{"components/DeletedComponent.html":{}}}],["deleted/deleted.component",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["deletedcomponent",{"_index":76,"title":{"components/DeletedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deletedcount",{"_index":512,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/TodosService.html":{}}}],["deletedcount():any",{"_index":557,"title":{},"body":{"components/NavbarComponent.html":{}}}],["deletedtodos",{"_index":296,"title":{},"body":{"components/DeletedComponent.html":{}}}],["deletee",{"_index":412,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["deletetodo",{"_index":717,"title":{},"body":{"injectables/TodosService.html":{}}}],["deletetodo(todo",{"_index":726,"title":{},"body":{"injectables/TodosService.html":{}}}],["deletetodo(todo:todos",{"_index":753,"title":{},"body":{"injectables/TodosService.html":{}}}],["dependencies",{"_index":108,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":707,"title":{},"body":{"interfaces/Todos.html":{}}}],["details",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["dev",{"_index":923,"title":{},"body":{"index.html":{}}}],["development",{"_index":918,"title":{},"body":{"index.html":{}}}],["directive",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["directives",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":934,"title":{},"body":{"index.html":{}}}],["directory",{"_index":939,"title":{},"body":{"index.html":{}}}],["dischargingtime",{"_index":217,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["display",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dist",{"_index":938,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["during",{"_index":847,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["dynamic",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":948,"title":{},"body":{"index.html":{}}}],["element",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["email",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{}}}],["end",{"_index":947,"title":{},"body":{"index.html":{}}}],["enter",{"_index":600,"title":{},"body":{"components/RegisterComponent.html":{}}}],["err",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{}}}],["error",{"_index":246,"title":{},"body":{"components/CommentComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersAuthService.html":{}}}],["errors",{"_index":850,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["eventemitter",{"_index":408,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"injectables/UsersAuthService.html":{}}}],["eventlisteneroptions",{"_index":229,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["eventlisteneroreventlistenerobject",{"_index":223,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["events",{"_index":345,"title":{},"body":{"components/FooterComponent.html":{}}}],["execute",{"_index":944,"title":{},"body":{"index.html":{}}}],["existinguser",{"_index":867,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["exists",{"_index":861,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["expiresinmins",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{}}}],["exports",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["failed",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["false",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["favorite",{"_index":323,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{}}}],["favorite?:boolean",{"_index":709,"title":{},"body":{"interfaces/Todos.html":{}}}],["favorited",{"_index":413,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["favoriteicon",{"_index":637,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["favoritequote",{"_index":585,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{}}}],["favorites",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/NavbarComponent.html":{}}}],["favorites'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["favorites.component.css",{"_index":310,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.html",{"_index":311,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites.component",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["favoritescomponent",{"_index":78,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["favoritescount",{"_index":513,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/TodosService.html":{}}}],["favoritescount():any",{"_index":553,"title":{},"body":{"components/NavbarComponent.html":{}}}],["favoritetodos",{"_index":312,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["fetch('https://dummyjson.com/auth/login",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{}}}],["fifty",{"_index":400,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{},"coverage.html":{}}}],["files",{"_index":929,"title":{},"body":{"index.html":{}}}],["filteredtodos",{"_index":612,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["first",{"_index":953,"title":{},"body":{"index.html":{}}}],["footer",{"_index":325,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["footer.component.css",{"_index":326,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":327,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":80,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form.value.email",{"_index":584,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.value.favoritequote",{"_index":586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.value.name",{"_index":581,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.value.password",{"_index":582,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.value.username",{"_index":580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":440,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":450,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol(null",{"_index":460,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":445,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["found.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.css",{"_index":566,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":567,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":565,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found/not",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["full",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":563,"title":{},"body":{"interfaces/Navigator.html":{}}}],["further",{"_index":956,"title":{},"body":{"index.html":{}}}],["generate",{"_index":932,"title":{},"body":{"index.html":{}}}],["generated",{"_index":913,"title":{},"body":{"index.html":{}}}],["getallcomments",{"_index":260,"title":{},"body":{"injectables/CommentsService.html":{}}}],["getallfavoritetodos",{"_index":313,"title":{},"body":{"components/FavoritesComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["getalltodo",{"_index":718,"title":{},"body":{"injectables/TodosService.html":{}}}],["getalltodo():todos",{"_index":749,"title":{},"body":{"injectables/TodosService.html":{}}}],["getalltodosbyhttp",{"_index":719,"title":{},"body":{"injectables/TodosService.html":{}}}],["getbattery",{"_index":562,"title":{},"body":{"interfaces/Navigator.html":{}}}],["getbatterylevel",{"_index":357,"title":{},"body":{"components/FooterComponent.html":{}}}],["getcategories",{"_index":743,"title":{},"body":{"injectables/TodosService.html":{}}}],["getcomments",{"_index":251,"title":{},"body":{"components/CommentComponent.html":{}}}],["getcompletedicon",{"_index":654,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["getcurrentuser",{"_index":514,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UsersAuthService.html":{}}}],["getdeletedtodos",{"_index":297,"title":{},"body":{"components/DeletedComponent.html":{},"injectables/TodosService.html":{}}}],["getfavoriteicon",{"_index":652,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["getfilteredtodos",{"_index":702,"title":{},"body":{"components/TodoListComponent.html":{}}}],["getisloggedin",{"_index":784,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["getloggedinuser",{"_index":785,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["getproductbyid",{"_index":678,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["getproductbyid(id",{"_index":771,"title":{},"body":{"injectables/TodosService.html":{}}}],["getting",{"_index":910,"title":{"index.html":{}},"body":{}}],["gettodobyid",{"_index":635,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{},"injectables/TodosService.html":{}}}],["gettodobyid(id",{"_index":681,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{},"injectables/TodosService.html":{}}}],["gettodosbyhttpcomponent",{"_index":82,"title":{"components/GetTodosByhttpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["given",{"_index":860,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["go",{"_index":959,"title":{},"body":{"index.html":{}}}],["gonne",{"_index":704,"title":{},"body":{"components/TodoListComponent.html":{}}}],["graph",{"_index":965,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":179,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handle",{"_index":849,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["headers",{"_index":284,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{},"components/LoginComponent.html":{}}}],["help",{"_index":957,"title":{},"body":{"index.html":{}}}],["home",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["html",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["http",{"_index":263,"title":{},"body":{"injectables/CommentsService.html":{},"components/LoginComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["http://localhost:4200",{"_index":925,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/CommentsService.html":{},"components/LoginComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["httpclientmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":279,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["httphandler",{"_index":276,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["httpinterceptor",{"_index":280,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["httprequest",{"_index":274,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["https://dummyjson.com/auth",{"_index":800,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["https://dummyjson.com/comments",{"_index":265,"title":{},"body":{"injectables/CommentsService.html":{}}}],["https://dummyjson.com/users/add",{"_index":853,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["id",{"_index":391,"title":{},"body":{"components/ItemTodoComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{}}}],["identifier",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["if(isloggedin",{"_index":533,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(result",{"_index":489,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this._auth.login(this.name",{"_index":468,"title":{},"body":{"components/LoginComponent.html":{}}}],["image",{"_index":542,"title":{},"body":{"components/NavbarComponent.html":{}}}],["img",{"_index":583,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/Users.html":{}}}],["implements",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CommntIntInterceptor.html":{},"index.html":{}}}],["import",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["imports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{}}}],["information",{"_index":864,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["injectable",{"_index":198,"title":{"injectables/CommentsService.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{},"coverage.html":{}}}],["injectables",{"_index":256,"title":{},"body":{"injectables/CommentsService.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{},"overview.html":{}}}],["input",{"_index":409,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["inputs",{"_index":382,"title":{},"body":{"components/ItemTodoComponent.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["int.interceptor",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["int.interceptor.ts",{"_index":270,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{},"coverage.html":{}}}],["int.interceptor.ts:11",{"_index":272,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["int.interceptor.ts:15",{"_index":277,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["intercept",{"_index":271,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["intercept(request",{"_index":273,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["interceptor",{"_index":267,"title":{"interceptors/CommntIntInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":268,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["interface",{"_index":211,"title":{"interfaces/BatteryManager.html":{},"interfaces/Navigator.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"interfaces/Todos.html":{},"interfaces/Users.html":{}},"body":{"interfaces/BatteryManager.html":{},"components/ItemTodoComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"interfaces/Users.html":{},"coverage.html":{}}}],["interfaces",{"_index":213,"title":{},"body":{"interfaces/BatteryManager.html":{},"interfaces/Navigator.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"interfaces/Todos.html":{},"interfaces/Users.html":{},"overview.html":{}}}],["isauthenticated",{"_index":782,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["isdeleted",{"_index":708,"title":{},"body":{"interfaces/Todos.html":{}}}],["islam",{"_index":815,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["isliggedin",{"_index":712,"title":{},"body":{"injectables/TodosService.html":{}}}],["isliggedin:boolean",{"_index":741,"title":{},"body":{"injectables/TodosService.html":{}}}],["isloggedin",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UsersAuthService.html":{}}}],["isloggedinn",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UsersAuthService.html":{}}}],["isloggedinn:boolean",{"_index":455,"title":{},"body":{"components/LoginComponent.html":{}}}],["item",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["item.id",{"_index":422,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["items",{"_index":550,"title":{},"body":{"components/NavbarComponent.html":{}}}],["itemtodocomponent",{"_index":85,"title":{"components/ItemTodoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iti",{"_index":366,"title":{},"body":{"components/FooterComponent.html":{}}}],["json.parse(storedusers",{"_index":823,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["json.stringify",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(this.users",{"_index":873,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["json.stringify(user",{"_index":830,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["karma",{"_index":946,"title":{},"body":{"index.html":{}}}],["khaled",{"_index":817,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["kminchelle",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{}}}],["lab1",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["legend",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["level",{"_index":218,"title":{},"body":{"interfaces/BatteryManager.html":{},"components/FooterComponent.html":{},"dependencies.html":{}}}],["list",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["list.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.css",{"_index":607,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["list.component.html",{"_index":606,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["list.component.ts",{"_index":605,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["list.component.ts:22",{"_index":692,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:25",{"_index":700,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:26",{"_index":701,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:36",{"_index":698,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:37",{"_index":699,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:46",{"_index":703,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:65",{"_index":697,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:82",{"_index":694,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:95",{"_index":696,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:99",{"_index":695,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list/todo",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":344,"title":{},"body":{"components/FooterComponent.html":{}}}],["listener",{"_index":222,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["local",{"_index":865,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["localstorage.getitem('currentuser",{"_index":524,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UsersAuthService.html":{}}}],["localstorage.getitem('users",{"_index":821,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["localstorage.removeitem('currentuser",{"_index":875,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["localstorage.removeitem('loggedinuser",{"_index":874,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["localstorage.setitem('currentuser",{"_index":844,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["localstorage.setitem('loggedinuser",{"_index":829,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["localstorage.setitem('users",{"_index":872,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["loggedin",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["loggedinuser",{"_index":783,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["loggedinuser:any=null",{"_index":812,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["login",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersAuthService.html":{}}}],["login'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["login(name",{"_index":854,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["login(username",{"_index":793,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["login.component.css",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":88,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform:formgroup",{"_index":453,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":559,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UsersAuthService.html":{}}}],["mahmoud",{"_index":813,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["map",{"_index":810,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["map((response",{"_index":842,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["matching",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["math.round((completedcount",{"_index":764,"title":{},"body":{"injectables/TodosService.html":{}}}],["math.round(battery.level",{"_index":341,"title":{},"body":{"components/FooterComponent.html":{}}}],["math.round(level",{"_index":356,"title":{},"body":{"components/FooterComponent.html":{}}}],["memorize",{"_index":399,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["message",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["method",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["modifiedreq",{"_index":282,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["module",{"_index":105,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":107,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":958,"title":{},"body":{"index.html":{}}}],["movie",{"_index":406,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["multi",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{},"index.html":{}}}],["navbar",{"_index":507,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["navbar.component.css",{"_index":508,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":509,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":90,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":924,"title":{},"body":{"index.html":{}}}],["navigator",{"_index":560,"title":{"interfaces/Navigator.html":{}},"body":{"interfaces/Navigator.html":{},"coverage.html":{}}}],["need",{"_index":952,"title":{},"body":{"index.html":{}}}],["new",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"injectables/UsersAuthService.html":{},"coverage.html":{},"index.html":{}}}],["newid",{"_index":617,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["newtodo",{"_index":609,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["next",{"_index":275,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{},"components/NavbarComponent.html":{}}}],["next.handle(authrequest",{"_index":292,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["next.handle(modifiedreq",{"_index":289,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["next.handle(request",{"_index":281,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["ng",{"_index":921,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":452,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["nice",{"_index":394,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["node",{"_index":818,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["notfoundcomponent",{"_index":92,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["null",{"_index":789,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["number",{"_index":231,"title":{},"body":{"interfaces/BatteryManager.html":{},"components/FooterComponent.html":{},"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{}}}],["object",{"_index":538,"title":{},"body":{"components/NavbarComponent.html":{}}}],["object.values(comments",{"_index":249,"title":{},"body":{"components/CommentComponent.html":{}}}],["observable",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/FooterComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["observable.create((observer",{"_index":358,"title":{},"body":{"components/FooterComponent.html":{}}}],["observer",{"_index":359,"title":{},"body":{"components/FooterComponent.html":{}}}],["observer.complete",{"_index":362,"title":{},"body":{"components/FooterComponent.html":{}}}],["observer.next(level",{"_index":361,"title":{},"body":{"components/FooterComponent.html":{}}}],["occurred",{"_index":851,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["of(false",{"_index":832,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["of(this.isloggedin",{"_index":876,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["of(true",{"_index":831,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["oncomplete",{"_index":379,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["oncomplete(title",{"_index":386,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["onfavorite",{"_index":380,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"injectables/TodosService.html":{}}}],["onfavorite(title",{"_index":388,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["onlogin",{"_index":467,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogout",{"_index":515,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["onsubmit(form",{"_index":579,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onsubmitt(email:string,password:string):observable",{"_index":835,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["options",{"_index":224,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["out",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":410,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["overview",{"_index":960,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":895,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["parseint(id",{"_index":769,"title":{},"body":{"injectables/TodosService.html":{}}}],["parseint(id:number",{"_index":768,"title":{},"body":{"injectables/TodosService.html":{}}}],["password",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{}}}],["password).subscribe",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password).subscribe(success",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["percentage",{"_index":776,"title":{},"body":{"injectables/TodosService.html":{}}}],["php",{"_index":814,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["platform",{"_index":949,"title":{},"body":{"index.html":{}}}],["please",{"_index":599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["post",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":258,"title":{},"body":{"injectables/CommentsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"injectables/UsersAuthService.html":{}}}],["process",{"_index":852,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["project",{"_index":912,"title":{},"body":{"index.html":{}}}],["promise",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Navigator.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{},"properties.html":{}}}],["property",{"_index":539,"title":{},"body":{"components/NavbarComponent.html":{}}}],["provide",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CommentsService.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["providers",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":711,"title":{},"body":{"injectables/TodosService.html":{}}}],["quote",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reactiveformsmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["redirect",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirectto",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":961,"title":{},"body":{"index.html":{}}}],["register",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersAuthService.html":{}}}],["register'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["register(name",{"_index":796,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["register.component.css",{"_index":569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":570,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":94,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":928,"title":{},"body":{"index.html":{}}}],["removeeventlistener",{"_index":220,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["removeeventlistener(type",{"_index":228,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["request",{"_index":278,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["request.clone",{"_index":283,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["request.headers.set('authorization",{"_index":285,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["res",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["res.json",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{}}}],["reserved",{"_index":368,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":843,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["response.token",{"_index":848,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["result",{"_index":244,"title":{},"body":{"components/CommentComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["results",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["returns",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["rights",{"_index":367,"title":{},"body":{"components/FooterComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CommentsService.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["root'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["route",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"components/CommentComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["router,private",{"_index":456,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":163,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":920,"title":{},"body":{"index.html":{}}}],["running",{"_index":940,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/FooterComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":931,"title":{},"body":{"index.html":{}}}],["searchterm",{"_index":610,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["serve",{"_index":922,"title":{},"body":{"index.html":{}}}],["server",{"_index":919,"title":{},"body":{"index.html":{}}}],["show",{"_index":322,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{}}}],["showdetails",{"_index":381,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"components/TodoDetailsComponentComponent.html":{}}}],["showing",{"_index":549,"title":{},"body":{"components/NavbarComponent.html":{}}}],["signup",{"_index":786,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["signup(user",{"_index":798,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["singletodo",{"_index":633,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["singletodo.id",{"_index":686,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["singletodo.todo",{"_index":685,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["singletodo:any",{"_index":658,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["someone",{"_index":395,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["something",{"_index":393,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{},"index.html":{}}}],["sql",{"_index":816,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["src/app/app",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:13",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:18",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:25",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/comment/comment.component.ts",{"_index":232,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["src/app/comment/comment.component.ts:12",{"_index":238,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:29",{"_index":239,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comments.service.ts",{"_index":257,"title":{},"body":{"injectables/CommentsService.html":{},"coverage.html":{}}}],["src/app/comments.service.ts:10",{"_index":262,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/comments.service.ts:14",{"_index":264,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/app/commnt",{"_index":269,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{},"coverage.html":{}}}],["src/app/deleted/deleted.component.ts",{"_index":293,"title":{},"body":{"components/DeletedComponent.html":{},"coverage.html":{}}}],["src/app/deleted/deleted.component.ts:11",{"_index":300,"title":{},"body":{"components/DeletedComponent.html":{}}}],["src/app/deleted/deleted.component.ts:19",{"_index":302,"title":{},"body":{"components/DeletedComponent.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":309,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:12",{"_index":315,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:19",{"_index":316,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/footer/footer.component.ts",{"_index":324,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:14",{"_index":332,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:15",{"_index":333,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:16",{"_index":334,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/get",{"_index":369,"title":{},"body":{"components/GetTodosByhttpComponent.html":{},"coverage.html":{}}}],["src/app/item",{"_index":375,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:15",{"_index":446,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":444,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:17",{"_index":448,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":447,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":449,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":441,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":442,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:81",{"_index":443,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":506,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:100",{"_index":521,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:106",{"_index":523,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:111",{"_index":519,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:116",{"_index":517,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:121",{"_index":518,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:125",{"_index":520,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:14",{"_index":525,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:15",{"_index":526,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:18",{"_index":516,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:92",{"_index":522,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/not",{"_index":564,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts",{"_index":568,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:14",{"_index":573,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:53",{"_index":574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/todo",{"_index":604,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["src/app/todos.service.ts",{"_index":710,"title":{},"body":{"injectables/TodosService.html":{},"coverage.html":{}}}],["src/app/todos.service.ts:10",{"_index":736,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:100",{"_index":731,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:11",{"_index":720,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:115",{"_index":728,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:120",{"_index":733,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:13",{"_index":739,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:133",{"_index":724,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:26",{"_index":740,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:29",{"_index":737,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:30",{"_index":738,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:32",{"_index":722,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:43",{"_index":730,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:48",{"_index":732,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:70",{"_index":727,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:74",{"_index":723,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:78",{"_index":725,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:82",{"_index":735,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:89",{"_index":734,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:96",{"_index":729,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.ts",{"_index":706,"title":{},"body":{"interfaces/Todos.html":{},"coverage.html":{}}}],["src/app/types/batterymanager.ts",{"_index":214,"title":{},"body":{"interfaces/BatteryManager.html":{},"coverage.html":{}}}],["src/app/types/batterymanager.ts:6",{"_index":226,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["src/app/types/batterymanager.ts:7",{"_index":230,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["src/app/types/navigator.ts",{"_index":561,"title":{},"body":{"interfaces/Navigator.html":{},"coverage.html":{}}}],["src/app/users",{"_index":779,"title":{},"body":{"injectables/UsersAuthService.html":{},"coverage.html":{}}}],["src/app/users.ts",{"_index":778,"title":{},"body":{"interfaces/Users.html":{},"coverage.html":{}}}],["started",{"_index":911,"title":{"index.html":{}},"body":{}}],["state",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":401,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["status",{"_index":339,"title":{},"body":{"components/FooterComponent.html":{}}}],["storage",{"_index":866,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["store",{"_index":863,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["stored",{"_index":937,"title":{},"body":{"index.html":{}}}],["storeduser",{"_index":824,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["storedusers",{"_index":820,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BatteryManager.html":{},"injectables/CommentsService.html":{},"components/FooterComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{}}}],["string,favoritequote",{"_index":855,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["submit",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(response",{"_index":833,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["success",{"_index":354,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successful",{"_index":593,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successfully",{"_index":491,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["support",{"_index":962,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":963,"title":{},"body":{"modules.html":{}}}],["table",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":713,"title":{},"body":{"injectables/TodosService.html":{}}}],["task:any",{"_index":742,"title":{},"body":{"injectables/TodosService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["test",{"_index":943,"title":{},"body":{"index.html":{}}}],["testing",{"_index":954,"title":{},"body":{"index.html":{}}}],["tests",{"_index":942,"title":{},"body":{"index.html":{}}}],["text",{"_index":353,"title":{},"body":{"components/FooterComponent.html":{}}}],["then(console.log",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{}}}],["then(res",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{}}}],["this..get",{"_index":772,"title":{},"body":{"injectables/TodosService.html":{}}}],["this._activateroute.snapshot.parammap.get('id",{"_index":671,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this._activateroute.snapshot.params['id",{"_index":661,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this._auth.login(username",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._auth.onsubmitt(email,password).subscribe",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._comment.getallcomments().subscribe",{"_index":243,"title":{},"body":{"components/CommentComponent.html":{}}}],["this._comment.getallcomments().subscribe(comments",{"_index":248,"title":{},"body":{"components/CommentComponent.html":{}}}],["this._router.navigate(['/login",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._router.navigate(['/todos",{"_index":420,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["this._todos.completedpercentage",{"_index":556,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todos.deletedcount",{"_index":558,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todos.deletetodo(todo",{"_index":415,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["this._todos.favoritescount",{"_index":554,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todos.getallfavoritetodos",{"_index":320,"title":{},"body":{"components/FavoritesComponent.html":{},"components/NavbarComponent.html":{}}}],["this._todos.gettodobyid(_id",{"_index":673,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this._todos.gettodobyid(id",{"_index":682,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this._todos.gettodobyid(this.id",{"_index":663,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this._todos.gettodobyid(this.id).subscribe",{"_index":679,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this._todos.oncomplete(title",{"_index":426,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["this._todos.onfavorite(title",{"_index":427,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["this._todos.task",{"_index":416,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["this._todoserves.addtodo(newtodo",{"_index":624,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["this._todoserves.getallfavoritetodos",{"_index":629,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["this._todoserves.getalltodo",{"_index":615,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["this._todoserves.oncomplete(title",{"_index":628,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["this.authguard.change",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authguard.loggedin$.subscribe((loggedin",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.getcurrentuser",{"_index":529,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.getisloggedin",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.getisloggedin().subscribe((isloggedin",{"_index":527,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.isloggedin",{"_index":530,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.logout",{"_index":552,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.usersloginservice.subscribe",{"_index":545,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.baseurl}/login",{"_index":839,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["this.batterylevel",{"_index":340,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.batterystatus",{"_index":351,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.batterystatuscolor",{"_index":352,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.comments",{"_index":245,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.completed.emit(this.todo.title",{"_index":425,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["this.currentuser",{"_index":528,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UsersAuthService.html":{}}}],["this.currentuser.image",{"_index":541,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.currentuser.name",{"_index":535,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.currentuser=localstorage.getitem('currentuser",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentuser=next.name",{"_index":547,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.deletedtodos",{"_index":305,"title":{},"body":{"components/DeletedComponent.html":{}}}],["this.favorited.emit(this.todo.title",{"_index":424,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["this.favoritetodos",{"_index":319,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.formbuilder.group",{"_index":463,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getallfavoritetodos",{"_index":318,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.getalltodo().filter(todo",{"_index":752,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.getcurrentuser",{"_index":543,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.getdeletedtodos",{"_index":304,"title":{},"body":{"components/DeletedComponent.html":{}}}],["this.gettodobyid",{"_index":667,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.http.get('https://dummyjson.com/todos",{"_index":759,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.http.get(this.commentsurl",{"_index":266,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this.http.post('https://dummyjson.com/auth/login",{"_index":837,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["this.http.post(url",{"_index":840,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["this.httpclient.get(environment.baseurl",{"_index":744,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.id",{"_index":660,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.isloggedin",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UsersAuthService.html":{}}}],["this.isloggedinn",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UsersAuthService.html":{}}}],["this.loggedin",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["this.loggedin.asobservable",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loggedin.getvalue",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loggedin.next",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loggedin.value",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loggedinuser",{"_index":828,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["this.loginform",{"_index":458,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.username",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":464,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.newtodo",{"_index":623,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["this.newtodo.trim",{"_index":616,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["this.onlogout",{"_index":544,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.product",{"_index":680,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.quote",{"_index":465,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.registerform",{"_index":575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.valid",{"_index":591,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.name",{"_index":588,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":590,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":676,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.router.navigate(['/home",{"_index":466,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":492,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/register",{"_index":597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/todos",{"_index":674,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.singletodo",{"_index":664,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.todo",{"_index":668,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.todo.id",{"_index":419,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["this.todos",{"_index":755,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todos.completed",{"_index":684,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.todos.favorite",{"_index":683,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.todos.filter(todo",{"_index":613,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["this.todos.find((todo",{"_index":767,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todos.find(todo",{"_index":417,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["this.todos.findindex(item",{"_index":421,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["this.todos.findindex(todo",{"_index":625,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["this.todos.id",{"_index":675,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.todos.indexof(todo",{"_index":754,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todos.length",{"_index":618,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["this.todos.push(newtodo",{"_index":621,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["this.todos.push(todos",{"_index":748,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todos.slice",{"_index":750,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todos.splice(index",{"_index":423,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["this.todos[index].completed",{"_index":757,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todos[index].favorite",{"_index":627,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["this.todos[this.todos.length",{"_index":619,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["this.todoservice.getdeletedtodos",{"_index":306,"title":{},"body":{"components/DeletedComponent.html":{}}}],["this.todoservice.gettodobyid(id",{"_index":677,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.todosid",{"_index":662,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["this.updatebatterystatus(battery",{"_index":343,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.userimage",{"_index":540,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.username",{"_index":534,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.users",{"_index":822,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["this.users.find(u",{"_index":825,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["this.users.length",{"_index":870,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["this.users.push(user",{"_index":871,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["this.userservice.register(name",{"_index":595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.signup(user).subscribe(success",{"_index":587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ItemTodoComponent.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["todo",{"_index":64,"title":{"interfaces/Todo.html":{},"interfaces/Todo-1.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"coverage.html":{}}}],["todo'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["todo.completed",{"_index":687,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{},"injectables/TodosService.html":{}}}],["todo.completed).length",{"_index":762,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["todo.component.css",{"_index":377,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["todo.component.html",{"_index":378,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["todo.component.ts",{"_index":376,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["todo.component.ts:21",{"_index":407,"title":{},"body":{"components/ItemTodoComponent.html":{}}}],["todo.component.ts:31",{"_index":383,"title":{},"body":{"components/ItemTodoComponent.html":{}}}],["todo.component.ts:40",{"_index":385,"title":{},"body":{"components/ItemTodoComponent.html":{}}}],["todo.component.ts:44",{"_index":390,"title":{},"body":{"components/ItemTodoComponent.html":{}}}],["todo.component.ts:64",{"_index":387,"title":{},"body":{"components/ItemTodoComponent.html":{}}}],["todo.component.ts:68",{"_index":389,"title":{},"body":{"components/ItemTodoComponent.html":{}}}],["todo.date",{"_index":690,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["todo.deleted).length",{"_index":760,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.description",{"_index":689,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["todo.favorite",{"_index":758,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.favorite).length",{"_index":765,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.id",{"_index":418,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["todo.isdeleted",{"_index":751,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.isdeleted).length",{"_index":756,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.title",{"_index":626,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["todo.todo",{"_index":308,"title":{},"body":{"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["todo.todo.tolowercase().includes(this.searchterm.tolowercase",{"_index":614,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["todo/item",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["todo:any",{"_index":411,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{}}}],["todo?.todo",{"_index":688,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["tododetailscomponentcomponent",{"_index":96,"title":{"components/TodoDetailsComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todoid:any",{"_index":656,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["todolistcomponent",{"_index":99,"title":{"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todos",{"_index":83,"title":{"interfaces/Todos.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"coverage.html":{}}}],["todos.service",{"_index":303,"title":{},"body":{"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["todos/:id",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["todosarray",{"_index":714,"title":{},"body":{"injectables/TodosService.html":{}}}],["todosarray:todos",{"_index":746,"title":{},"body":{"injectables/TodosService.html":{}}}],["todoscount",{"_index":611,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{}}}],["todoservice",{"_index":301,"title":{},"body":{"components/DeletedComponent.html":{}}}],["todosid",{"_index":634,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["todosid:any",{"_index":657,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{}}}],["todosservice",{"_index":299,"title":{"injectables/TodosService.html":{}},"body":{"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"coverage.html":{}}}],["token",{"_index":288,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{},"injectables/UsersAuthService.html":{}}}],["totalcount",{"_index":763,"title":{},"body":{"injectables/TodosService.html":{}}}],["totaltodos",{"_index":775,"title":{},"body":{"injectables/TodosService.html":{}}}],["totaltodos.length",{"_index":777,"title":{},"body":{"injectables/TodosService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["true",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["tslib",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"injectables/CommentsService.html":{},"interceptors/CommntIntInterceptor.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Navigator.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Todos.html":{},"injectables/TodosService.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{},"coverage.html":{}}}],["types/batterymanager",{"_index":335,"title":{},"body":{"components/FooterComponent.html":{}}}],["u.favoritequote",{"_index":857,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["u.name",{"_index":856,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["u.password",{"_index":827,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["u.username",{"_index":826,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["undefined",{"_index":649,"title":{},"body":{"components/TodoDetailsComponentComponent.html":{},"injectables/TodosService.html":{}}}],["unit",{"_index":941,"title":{},"body":{"index.html":{}}}],["update",{"_index":338,"title":{},"body":{"components/FooterComponent.html":{}}}],["updatebatterystatus(battery",{"_index":349,"title":{},"body":{"components/FooterComponent.html":{}}}],["url",{"_index":838,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["urltree",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":933,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":537,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersAuthService.html":{}}}],["user.id",{"_index":869,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["user.username",{"_index":868,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["username",{"_index":459,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{}}}],["users",{"_index":49,"title":{"interfaces/Users.html":{}},"body":{"components/AppComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Users.html":{},"injectables/UsersAuthService.html":{},"coverage.html":{}}}],["usersauthservice",{"_index":27,"title":{"injectables/UsersAuthService.html":{}},"body":{"components/AppComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"injectables/UsersAuthService.html":{},"coverage.html":{}}}],["usersauthservice,private",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["userservice",{"_index":572,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usersloginservice:eventemitter",{"_index":811,"title":{},"body":{"injectables/UsersAuthService.html":{}}}],["valid",{"_index":601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":451,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":576,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":577,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern",{"_index":462,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":461,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentsService.html":{},"components/FooterComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["var",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/FooterComponent.html":{},"components/GetTodosByhttpComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{}}}],["version",{"_index":916,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":945,"title":{},"body":{"index.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BatteryManager.html":{},"components/CommentComponent.html":{},"components/DeletedComponent.html":{},"components/FavoritesComponent.html":{},"components/ItemTodoComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoDetailsComponentComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersAuthService.html":{}}}],["watch",{"_index":404,"title":{},"body":{"components/ItemTodoComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoListComponent.html":{},"injectables/TodosService.html":{}}}],["window.navigator.getbattery.then((battery",{"_index":337,"title":{},"body":{"components/FooterComponent.html":{}}}],["works",{"_index":374,"title":{},"body":{"components/GetTodosByhttpComponent.html":{},"components/NotFoundComponent.html":{}}}],["yes",{"_index":227,"title":{},"body":{"interfaces/BatteryManager.html":{}}}],["your_auth_token",{"_index":290,"title":{},"body":{"interceptors/CommntIntInterceptor.html":{}}}],["zone.js",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedIn\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: UsersAuthService, authGuard: AuthGuard)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        UsersAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authGuard\n                                                  \n                                                        \n                                                                        AuthGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lab1'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthGuard } from './auth.guard';\nimport { UsersAuthService } from './users-auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'lab1';\n  // isLoggedIn: boolean = false;\n  // currentUser:string=localStorage.getItem('currentUser')!;\n\n  loggedIn = false;\n\n  constructor(private authService: UsersAuthService,private authGuard: AuthGuard) {\n    // this.isLoggedIn = this.authService.getIsLoggedIn();\n    // console.log( this.isLoggedIn);\n    // this.currentUser=localStorage.getItem('currentUser')!;\n  }\n\n  ngOnInit() {\n    this.authGuard.loggedIn$.subscribe((loggedIn) => {\n      this.loggedIn = loggedIn;\n    });\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n -->\n\n\n  \n\n\n\n\n\n\n\n\n\n  \n    Todo App\n    \n      \n    \n      \n        \n          \n\n              \n                 Login\n              \n              \n                 register\n              \n          \n        \n      \n\n\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->        Todo App                                                                     Login                                             register                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nDeletedComponent\n\nDeletedComponent\n\nAppModule -->\n\nDeletedComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGetTodosByhttpComponent\n\nGetTodosByhttpComponent\n\nAppModule -->\n\nGetTodosByhttpComponent->AppModule\n\n\n\n\n\nItemTodoComponent\n\nItemTodoComponent\n\nAppModule -->\n\nItemTodoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTodoDetailsComponentComponent\n\nTodoDetailsComponentComponent\n\nAppModule -->\n\nTodoDetailsComponentComponent->AppModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nAppModule -->\n\nTodoListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCommntIntInterceptor\n\nCommntIntInterceptor\n\nAppModule -->\n\nCommntIntInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            DeletedComponent\n                        \n                        \n                            FavoritesComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            GetTodosByhttpComponent\n                        \n                        \n                            ItemTodoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TodoDetailsComponentComponent\n                        \n                        \n                            TodoListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CommntIntInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ItemTodoComponent } from './item-todo/item-todo.component';\nimport { TodoDetailsComponentComponent } from './todo-details-component/todo-details-component.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { DeletedComponent } from './deleted/deleted.component';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { GetTodosByhttpComponent } from './get-todos-byhttp/get-todos-byhttp.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { CommntIntInterceptor } from './commnt-int.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent,\n    LoginComponent,\n    NotFoundComponent,\n    NavbarComponent,\n    FooterComponent,\n    ItemTodoComponent,\n    TodoDetailsComponentComponent,\n    RegisterComponent,\n    FavoritesComponent,\n    DeletedComponent,\n    GetTodosByhttpComponent,\n    CommentComponent\n  ],\n  imports: [\n    \n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: CommntIntInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { CommentComponent } from './comment/comment.component';\nimport { DeletedComponent } from './deleted/deleted.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TodoDetailsComponentComponent } from './todo-details-component/todo-details-component.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  // { path: 'register', component: RegisterComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'comments', component: CommentComponent ,canActivate:[AuthGuard]},\n  { path: 'home', component: TodoListComponent ,canActivate:[AuthGuard]},\n  { path: 'favorites', component: FavoritesComponent ,canActivate:[AuthGuard]},\n  { path: 'deleted', component: DeletedComponent ,canActivate:[AuthGuard]},\n  { path: 'todos/:id', component: TodoDetailsComponentComponent ,canActivate:[AuthGuard]},\n  // { path: 'todos/:id', component: TodoDetailsComponentComponent }\n  { path: 'not-found', component: NotFoundComponent },\n  { path: '**', redirectTo: '/not-found' },\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\n\n\n\n\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedIn\n                            \n                            \n                                loggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        change\n                        \n                    \n                \n            \n            \n                \nchange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthGuard implements CanActivate {\n  loggedIn = new BehaviorSubject(false);\n  loggedIn$ = this.loggedIn.asObservable();\n\n  constructor(private _router: Router) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    // return true;\n    return this.loggedIn.value ? true : this._router.navigate(['/login']);\n\n  }\n  change() {\n    this.loggedIn.next(! this.loggedIn.getValue());\n}\n\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatteryManager.html":{"url":"interfaces/BatteryManager.html","title":"interface - BatteryManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BatteryManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types/BatteryManager.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            charging\n                                        \n                                \n                                \n                                        \n                                            chargingTime\n                                        \n                                \n                                \n                                        \n                                            dischargingTime\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addEventListener\n                                    \n                                \n                                \n                                    \n                                        removeEventListener\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventListener\n                        \n                    \n                \n            \n            \n                \naddEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/types/BatteryManager.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListenerOrEventListenerObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            boolean | AddEventListenerOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEventListener\n                        \n                    \n                \n            \n            \n                \nremoveEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/types/BatteryManager.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListenerOrEventListenerObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            boolean | EventListenerOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charging\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charging:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chargingTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chargingTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dischargingTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dischargingTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BatteryManager {\n  level: number;\n  charging: boolean;\n  chargingTime: number;\n  dischargingTime: number;\n  addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comment/comment.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _Comment: CommentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comment/comment.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _Comment\n                                                  \n                                                        \n                                                                        CommentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comment/comment.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/comment/comment.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommentsService } from '../comments.service';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\n\nexport class CommentComponent {\n  comments!: any[];\n\n  constructor(private _router:Router,private _Comment:CommentsService) {\n    \n  }\n\n  // ngOnInit() {\n  //   this._Comment.getAllComments().subscribe(\n  //     (result) => {\n  //       this.comments = result;\n  //     },\n  //     (error) => {\n  //       console.log(error);\n  //     }\n  //   );\n  // }\n \n  ngOnInit(): void {\n    this._Comment.getAllComments().subscribe(comments => {\n      this.comments = Object.values(comments);\n      console.log(this.comments);\n      \n    });\n  }\n\n\n\n  // getComments()\n  // {\n  //  this._Comment.getAllComments().subscribe(\n  //     (result) => {\n  //       this.comments= result;\n  //       console.log(result);\n  //       console.log(this.comments);\n        \n        \n  //     },\n  //     (error) => {\n  //       console.log(error);\n  //     }\n  //   );\n  // }\n\n\n\n\n}\n\n    \n\n    \n        comments\n\n\n\n\n\n \n  comments {{comment.id}}\n\n  {{comment.body}}\n  {{comment[0][0].body}} -->\n\n    \n\n    \n                \n                    ./comment.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'comments   comments {{comment.id}}  {{comment.body}}  {{comment[0][0].body}} -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsService.html":{"url":"injectables/CommentsService.html","title":"injectable - CommentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/comments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commentsUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllComments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/comments.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllComments\n                        \n                    \n                \n            \n            \n                \ngetAllComments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comments.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentsUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://dummyjson.com/comments'\n                    \n                \n                    \n                        \n                                Defined in src/app/comments.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n\n  private commentsUrl = 'https://dummyjson.com/comments';\n\n  constructor(private http: HttpClient) { }\n\n  getAllComments(): Observable{\n    return this.http.get(this.commentsUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CommntIntInterceptor.html":{"url":"interceptors/CommntIntInterceptor.html","title":"interceptor - CommntIntInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  CommntIntInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commnt-int.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/commnt-int.interceptor.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commnt-int.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class CommntIntInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    // return next.handle(request);\n    // const modifiedReq = request.clone({ headers: request.headers.set('Authorization', 'Bearer my-auth-token') });\n    // return next.handle(modifiedReq);\n    const token = 'YOUR_AUTH_TOKEN';\n    const authRequest = request.clone({\n      headers: request.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeletedComponent.html":{"url":"components/DeletedComponent.html","title":"component - DeletedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeletedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/deleted/deleted.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deleted\n            \n\n            \n                styleUrls\n                ./deleted.component.css\n            \n\n\n\n            \n                templateUrl\n                ./deleted.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deletedTodos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDeletedTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoService: TodosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/deleted/deleted.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoService\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDeletedTodos\n                        \n                    \n                \n            \n            \n                \ngetDeletedTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/deleted/deleted.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deletedTodos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Todos[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/deleted/deleted.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Todos } from '../todos';\nimport { TodosService } from '../todos.service';\n\n@Component({\n  selector: 'app-deleted',\n  templateUrl: './deleted.component.html',\n  styleUrls: ['./deleted.component.css']\n})\nexport class DeletedComponent {\n  deletedTodos!: Todos[];\n\n  constructor(private todoService: TodosService) {\n    this.getDeletedTodos();\n   }\n\n\n\n  getDeletedTodos() {\n     this.deletedTodos = this.todoService.getDeletedTodos();\n    console.log(this.deletedTodos);\n\n  }\n}\n\n    \n\n    \n        \n  \n    Deleted Todos\n  \n  \n    \n      \n        {{ todo.todo }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./deleted.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Deleted Todos                      {{ todo.todo }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeletedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favoriteTodos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllFavoriteTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _Todos: TodosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _Todos\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllFavoriteTodos\n                        \n                    \n                \n            \n            \n                \ngetAllFavoriteTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        favoriteTodos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Todos[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/favorites/favorites.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Todos } from '../todos';\nimport { TodosService } from '../todos.service';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent {\n  favoriteTodos!: Todos[]\n\n  constructor(private _router:Router,private _Todos:TodosService) {\n    this.getAllFavoriteTodos();\n  }\n\n\n  getAllFavoriteTodos() {\n  this.favoriteTodos= this._Todos.getAllFavoriteTodos()\n  }\n\n\n}\n\n    \n\n    \n         -->\n     -->\n       -->\n      {{ todo.todo }} -->\n\n      Delete -->\n      show -->\n      Favorite -->\n\n\n\n      \n    \n\n   -->\n  \n    \n      Favorite Todos\n    \n    \n      \n        \n          {{ todo.todo }}\n          \n            \n           -->\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./favorites.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->     -->       -->      {{ todo.todo }} -->      Delete -->      show -->      Favorite -->             -->            Favorite Todos                                {{ todo.todo }}                                 -->                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batteryLevel\n                            \n                            \n                                batteryStatus\n                            \n                            \n                                batteryStatusColor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        batteryLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        batteryStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        batteryStatusColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BatteryManager } from '../types/BatteryManager';\n//  import batteryLevel from 'battery-level';\n// import batteryLevel from 'battery-level';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n  batteryLevel: number = 0;\n  batteryStatus: string = '';\n  batteryStatusColor: string = '';\n\n  // ngOnInit() {\n  //   window.navigator.getBattery.then((battery) => {\n  //     // Update battery properties and status\n  //     this.batteryLevel = Math.round(battery.level * 100);\n  //     this.updateBatteryStatus(battery);\n\n  //     // Listen for battery events\n  //     battery.addEventListener('levelchange', () => {\n  //       this.batteryLevel = Math.round(battery.level * 100);\n  //       this.updateBatteryStatus(battery);\n  //     });\n  //     battery.addEventListener('chargingchange', () => {\n  //       this.updateBatteryStatus(battery);\n  //     });\n  //   });\n  //   battery$.subscribe((battery) => {\n  //     this.batteryLevel = Math.round(battery.level * 100);\n  //     this.updateBatteryStatus(battery);\n  //     battery.addEventListener('levelchange', () => {\n  //       this.batteryLevel = Math.round(battery.level * 100);\n  //       this.updateBatteryStatus(battery);\n  //     });\n  //     battery.addEventListener('chargingchange', () => {\n  //       this.updateBatteryStatus(battery);\n  //     });\n  //   });\n  // }\n\n  // updateBatteryStatus(battery: BatteryManager) {\n  //   if (battery.charging) {\n  //     this.batteryStatus = 'Charging';\n  //     this.batteryStatusColor = 'text-success';\n  //   } else if (battery.level  {\n//     this.batteryLevel = Math.round(level * 100);\n//   });\n// }\n// getBatteryLevel(): Observable {\n//   return Observable.create((observer: Observer) => {\n//     batteryLevel().then(level => {\n//       observer.next(level);\n//       observer.complete();\n//     });\n//   });\n// }\n  }\n\n\n\n\n\n    \n\n    \n        \n  \n    Copyright &copy; 2023\n    iti All rights reserved.\n    \n      \n      {{ batteryLevel }}%\n     -->\n\n    \n      Battery Level: {{ batteryLevel }}%\n     -->\n     Battery Level: {{batteryLevel}}%\n\n\n  \n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Copyright © 2023    iti All rights reserved.                {{ batteryLevel }}%     -->          Battery Level: {{ batteryLevel }}%     -->     Battery Level: {{batteryLevel}}%  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GetTodosByhttpComponent.html":{"url":"components/GetTodosByhttpComponent.html","title":"component - GetTodosByhttpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GetTodosByhttpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/get-todos-byhttp/get-todos-byhttp.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-get-todos-byhttp\n            \n\n            \n                styleUrls\n                ./get-todos-byhttp.component.css\n            \n\n\n\n            \n                templateUrl\n                ./get-todos-byhttp.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-get-todos-byhttp',\n  templateUrl: './get-todos-byhttp.component.html',\n  styleUrls: ['./get-todos-byhttp.component.css']\n})\nexport class GetTodosByhttpComponent {\n\n}\n\n    \n\n    \n        get-todos-byhttp works!\n\n    \n\n    \n                \n                    ./get-todos-byhttp.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'get-todos-byhttp works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GetTodosByhttpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemTodoComponent.html":{"url":"components/ItemTodoComponent.html","title":"component - ItemTodoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemTodoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/item-todo/item-todo.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-todo\n            \n\n            \n                styleUrls\n                ./item-todo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./item-todo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                onComplete\n                            \n                            \n                                onFavorite\n                            \n                            \n                                showDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                todo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _Todos: TodosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/item-todo/item-todo.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _Todos\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        todo\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/item-todo/item-todo.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(todo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-todo/item-todo.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onComplete\n                        \n                    \n                \n            \n            \n                \nonComplete(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-todo/item-todo.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFavorite\n                        \n                    \n                \n            \n            \n                \nonFavorite(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-todo/item-todo.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDetails\n                        \n                    \n                \n            \n            \n                \nshowDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-todo/item-todo.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Todo[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 1,\n      todo: \"Do something nice for someone I care about\",\n      completed: true,\n    },\n    { id: 2, todo: 'Memorize the fifty states and their capitals', completed: true },\n    { id: 3, todo: 'Watch a classic movie', completed: false }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/item-todo/item-todo.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TodosService } from '../todos.service';\nimport { UsersAuthService } from '../users-auth.service';\n\ninterface Todo {\n  id: number;\n  todo: string;\n  completed: boolean;\n}\n\n@Component({\n  selector: 'app-item-todo',\n  templateUrl: './item-todo.component.html',\n  styleUrls: ['./item-todo.component.css']\n})\n\n\n\nexport class ItemTodoComponent {\n  todos: Todo[] = [\n    {\n      id: 1,\n      todo: \"Do something nice for someone I care about\",\n      completed: true,\n    },\n    { id: 2, todo: 'Memorize the fifty states and their capitals', completed: true },\n    { id: 3, todo: 'Watch a classic movie', completed: false }\n  ];\n\n  @Input() todo:any;\n  // @Output() deletee = new EventEmitter() ;\n  // @Output() favorited = new EventEmitter();\n  // @Output() completed = new EventEmitter();\n\n  constructor(private _router:Router,private _Todos:TodosService) { }\n\n\n\n  delete(todo:Todo):void\n  {\n    this._Todos.deleteTodo(todo)\n  }\n  showDetails() {\n    this._Todos.task = this.todos.find(todo => todo.id == this.todo.id)\n    this._router.navigate(['/todos', this.todo.id]);\n  }\n\n  // delete(todo: Todo): void {\n  //   const index = this.todos.findIndex(item => item.id === todo.id);\n  //   if (index !== -1) {\n  //     this.todos.splice(index, 1);\n  //   }\n  // }\n\n  // onFavorite() {\n  //   this.favorited.emit(this.todo.title);\n  // }\n\n  // onComplete() {\n  //   this.completed.emit(this.todo.title);\n  // }\n\n  onComplete(title: string) {\n    this._Todos.onComplete(title)\n  }\n\n    onFavorite(title: string) {\n    this._Todos.onFavorite(title);\n  }\n\n  \n\n}\n\n    \n\n    \n        \n  \n    \n    {{ todo.todo }}\n\n    Delete -->\n    show -->\n    Favorite -->\n\n    \n      \n         Delete\n      \n      \n         Favorite\n      \n      \n         Complete\n      \n      Details\n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./item-todo.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ todo.todo }}    Delete -->    show -->    Favorite -->                   Delete                     Favorite                     Complete            Details      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemTodoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isLoggedInn\n                            \n                            \n                                loginForm\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                quote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _Auth: UsersAuthService, formBuilder: FormBuilder, authGuard: AuthGuard)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _Auth\n                                                  \n                                                        \n                                                                        UsersAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authGuard\n                                                  \n                                                        \n                                                                        AuthGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedInn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quote\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersAuthService } from '../users-auth.service';\nimport { NgForm } from '@angular/forms';\nimport { AuthGuard } from '../auth.guard';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  loginForm:FormGroup;\n  email!: string;\n  password!: string;\n  // data={email:\"\",password:\"\"}\n\n  name: string='';\n  quote: string='';\n  // isLoggedIn = false;\n   isLoggedInn:boolean = false;\n\n  constructor(private router: Router,private _Auth:UsersAuthService,\n    private formBuilder: FormBuilder,\n    private authGuard: AuthGuard) {\n\n    // this.loginForm = new FormGroup({\n    //   username: new FormControl(null, [Validators.required , Validators.pattern('')]),\n    //   password: new FormControl(null, [Validators.required])\n    // })\n\n\n\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n\n  }\n  ngOnInit() {\n    // this.loginForm = this.formBuilder.group({\n    //   username: ['', Validators.required],\n    //   password: ['', Validators.required],\n    // });\n\n\n  }\n  // login() {\n  //   if (this.name && this.quote) {\n  //     this.isLoggedIn = true;\n  //     this.router.navigate(['/home']);\n  //   }\n  // }\n\n  // onLogin() {\n  //   if(this._Auth.login(this.name, this.quote))\n  //     this.router.navigate(['/home']);\n  // }\n\n\n\n  // constructor(private http: HttpClient) { }\n\n  // fetch('https://dummyjson.com/auth/login', {\n//   method: 'POST',\n//   headers: { 'Content-Type': 'application/json' },\n//   body: JSON.stringify({\n\n//     username: 'kminchelle',\n//     password: '0lelplR',\n//     // expiresInMins: 60, // optional\n//   })\n// })\n// .then(res => res.json())\n// .then(console.log);\n\n\n  onSubmit() {\n    const username = this.loginForm.value.username;\n    const password = this.loginForm.value.password;\n    this._Auth.login(username, password).subscribe(\n      (result) => {\n        this.isLoggedInn = true;\n        this.authGuard.change();\n        if(result)\n        this.router.navigate(['/home']);\n        console.log('Logged in successfully');\n\n      },\n      (error) => {\n        this.router.navigate(['/login']);\n        console.log('Login failed');\n\n      }\n    );\n\n\n  }\n\n\n\n}\n\n\n\n  // onSubmit() {\n  //   const { email, password } = this.loginForm.value;\n  //   this._Auth.onSubmitt(email,password).subscribe(\n  //     (res)=>{\n  //       this.router.navigate(['/home']);\n  //     },\n  //     (err) => {\n  //       this.router.navigate(['/login']);\n  //     }\n  //   )\n  // }\n\n\n\n  // onSubmit() {\n  //   const { username, password } = this.loginForm.value;\n  //   this._Auth.login(username, password).subscribe(success => {\n  //     if (success) {\n  //       // Redirect to home page\n  //            this.router.navigate(['/home']);\n  //     } else {\n  //       // Display error message\n  //       this.router.navigate(['/login']);\n\n  //     }\n  //   });\n  // }\n\n\n\n    \n\n    \n        \n  Login\n  \n    \n      Name:\n      \n    \n    \n      Favorite Quote:\n      \n    \n    \n      password:\n      \n     -->\n\n    Login\n  \n -->\n\n\n  Login\n\n  \n    Username:\n    \n  \n  \n    Password:\n    \n  \n  \n    Login\n  \n\n\n -->\n\n\n\n  \n    Email address\n    \n  \n  \n    Password\n    \n  \n  Submit\n -->\n\n\n  Login\n\n  \n    Username\n    \n  \n  \n    Password\n    \n  \n  Login\n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Login            Name:                    Favorite Quote:                    password:           -->    Login   -->  Login      Username:            Password:            Login   -->      Email address            Password        Submit -->  Login      Username            Password        Login'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                completedPercentage\n                            \n                            \n                                deletedCount\n                            \n                            \n                                favoritesCount\n                            \n                            \n                                getAllFavoriteTodos\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: UsersAuthService, _Todos: TodosService, router: Router, authGuard: AuthGuard)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        UsersAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _Todos\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authGuard\n                                                  \n                                                        \n                                                                        AuthGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        completedPercentage\n                        \n                    \n                \n            \n            \n                \ncompletedPercentage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedCount\n                        \n                    \n                \n            \n            \n                \ndeletedCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favoritesCount\n                        \n                    \n                \n            \n            \n                \nfavoritesCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllFavoriteTodos\n                        \n                    \n                \n            \n            \n                \ngetAllFavoriteTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('currentUser')!\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { TodosService } from '../todos.service';\nimport { UsersAuthService } from '../users-auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  isLoggedIn = false;\n  loggedIn = false;\n\n  // currentUser: string='';\n  currentUser:string=localStorage.getItem('currentUser')!;\n\n  constructor(private authService: UsersAuthService,private _Todos:TodosService,\n     private router: Router,\n     private authGuard: AuthGuard) { }\n  // favoritesCount = 2;\n  // deletedCount = 1;\n  // completedPercentage = 60;\n\n  // ngOnInit(): void {\n  //   this.authService.getIsLoggedIn().subscribe((isLoggedIn) => {\n  //     this.isLoggedIn = isLoggedIn;\n  //     this.currentUser = this.authService.getCurrentUser();\n  //     console.log( this.isLoggedIn);\n  //     console.log( this.currentUser);\n\n  //   });\n  // }\n\n\n  // ngOnInit(): void {\n  //   this.authService.getIsLoggedIn().subscribe((isLoggedIn) => {\n  //     this.isLoggedIn = isLoggedIn;\n  //     this.currentUser = this.authService.getCurrentUser();\n  //   });\n  // }\n\n\n  // ngOnInit(): void {\n  //   // this.isLoggedIn = this.authService.isLoggedIn;\n  //   // this.currentUser = this.authService.getCurrentUser();\n  // }\n\n  // ngOnInit(): void {\n    // this.authService.getIsLoggedIn().subscribe((isLoggedIn) => {\n    //   this.isLoggedIn = isLoggedIn;\n    //   console.log(isLoggedIn);\n    // a  console.log(this.isLoggedIn);\n    //   this.currentUser = this.authService.getCurrentUser();\n    // });\n  // }\n\n  // ngOnInit(): void {\n    // this.authService.getIsLoggedIn().subscribe((isLoggedIn) => {\n    //   this.isLoggedIn = isLoggedIn;\n    //   if(isLoggedIn){\n    //     this.currentUser!= this.authService.getCurrentUser();\n        // this.userName = this.currentUser.name; // assuming that the user object has a name property\n        // this.userImage = this.currentUser.image; // assuming that the user object has an image property\n      // }\n    // });\n\n    // this.currentUser!= localStorage.getItem('currentUser');\n\n  // }\n\n  // ngOnInit(): void {\n  //   this.getCurrentUser();\n  //   this.onLogout()\n\n  //   this.authService.UsersloginService.subscribe(\n  //     (next)=>{\n  //       // console.log(next);\n  //       this.currentUser=next.name;\n  //     },\n  //     (error)=>{\n  //       console.log(\"error in showing items in basket\")\n  //     },\n  //     ()=>{}\n\n  //   );\n\n  // }\n\n  ngOnInit() {\n    this.authGuard.loggedIn$.subscribe((loggedIn) => {\n      this.loggedIn = loggedIn;\n    });\n\n  }\n\n\n  getCurrentUser(): void {\n    const user = localStorage.getItem('currentUser');\n    if (user) {\n      this.currentUser = user;\n    }\n  }\n  onLogout(): void {\n    this.authService.logout();\n    this.authGuard.change();\n    this.router.navigate(['/login']);\n  }\n  favoritesCount():any{\n    return this._Todos.favoritesCount()\n    // console.log();\n  }\n\n  completedPercentage():any{\n    return this._Todos.completedPercentage()\n    // console.log();\n  }\n\n  deletedCount():any{\n    return this._Todos.deletedCount()\n  }\n\n  getAllFavoriteTodos(){\n    this._Todos.getAllFavoriteTodos()\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    Todo App\n    \n      \n    \n    \n      \n        \n          Home\n        \n\n\n\n        \n          \n             \n            Favorites ({{ favoritesCount() }})\n          \n        \n        \n          \n            \n            Deleted ({{ deletedCount() }})\n          \n        \n        \n          \n            \n            Completed ({{ completedPercentage() }}%)\n          \n        \n\n      \n      \n        \n        \n           login\n        \n\n        \n           Logout\n        \n      \n    \n  \n -->\n\n\n  \n    Todo App\n    \n      \n    \n    \n      \n        \n          Home\n        \n        \n          \n             \n            Favorites ({{ favoritesCount() }})\n          \n        \n        \n          \n            \n            Deleted ({{ deletedCount() }})\n          \n        \n        \n          \n            \n            Completed ({{ completedPercentage() }}%)\n          \n        \n      \n      \n        \n          \n          {{currentUser}}\n          \n             Logout\n          \n        \n        \n          \n             Login\n          \n        \n       -->\n      \n        \n        \n          \n            \n              \n              {{currentUser}}\n              \n                 Logout\n              \n            \n            \n              \n                 Login\n              \n              \n                 register\n              \n            \n          \n        \n      \n\n      \n        \n          \n          {{currentUser}}\n          \n             Logout\n          \n        \n        \n          \n             Login\n          \n        \n       -->\n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Todo App                                          Home                                                   Favorites ({{ favoritesCount() }})                                                            Deleted ({{ deletedCount() }})                                                            Completed ({{ completedPercentage() }}%)                                                         login                           Logout                     -->      Todo App                                          Home                                                   Favorites ({{ favoritesCount() }})                                                            Deleted ({{ deletedCount() }})                                                            Completed ({{ completedPercentage() }}%)                                                          {{currentUser}}                       Logout                                                 Login                         -->                                                                        {{currentUser}}                               Logout                                                                     Login                                             register                                                                                    {{currentUser}}                       Logout                                                 Login                         -->      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Navigator.html":{"url":"interfaces/Navigator.html","title":"interface - Navigator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Navigator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types/Navigator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getBattery\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getBattery\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getBattery:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BatteryManager } from \"./BatteryManager\";\n\nexport  interface Navigator {\n   getBattery: () => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        not-found works!\n\n    \n\n    \n                \n                    ./not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'not-found works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UsersAuthService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Users } from '../users';\nimport { UsersAuthService } from '../users-auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent {\n  registerForm: FormGroup;\n\n  constructor(private router: Router,private userService: UsersAuthService,private formBuilder: FormBuilder) {\n    this.registerForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n    });\n\n  }\n\n  // onSubmit(form: NgForm) {\n  //   const user: Users = {\n  //     id: 1,\n  //     username: form.value.username,\n  //     name: form.value.name,\n  //     password: form.value.password,\n  //     img: '',\n  //     email: form.value.email,\n  //     favoriteQuote: form.value.favoriteQuote\n  //   };\n  //   this.userService.signUp(user).subscribe(success => {\n  //     if (success) {\n  //       // Redirect to login page\n  //       this.router.navigate(['/login']);\n\n  //     } else {\n  //       // Display error message\n  //       this.router.navigate(['/login']);\n  //     }\n  //   });\n  // }\n\n  onSubmit() {\n    const name = this.registerForm.value.name;\n    const email = this.registerForm.value.email;\n    const password = this.registerForm.value.password;\n    if (this.registerForm.valid) {\n      console.log('Registration successful!');\n      console.log(this.registerForm.value);\n    }\n\n    this.userService.register(name, email, password).subscribe(\n      (result) => {\n        console.log('Registered successfully');\n        console.log(result);\n            this.router.navigate(['/login']);\n      },\n      (error) => {\n        console.log(error);\n        console.log('Registration failed');\n        this.router.navigate(['/register']);\n\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    Username:\n    \n  \n  \n    Name:\n    \n  \n  \n    Password:\n    \n  \n  \n    Confirm Password:\n    \n  \n  \n    Email:\n    \n  \n  \n    Favorite Quote:\n    \n  \n  \n    Register\n  \n -->\n\n \n  \n    Name\n    \n\n  \n\n  \n    Email\n    \n  \n  \n    Password\n    \n  \n  Register\n -->\n\n\n\n\n\n  \n    Name\n    \n    \n      Please enter a name.\n    \n  \n\n  \n    Email\n    \n    \n      Please enter a valid email address.\n    \n  \n\n  \n    Password\n    \n    \n      Please enter a password with at least 6 characters.\n    \n  \n\n  Register\n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Username:            Name:            Password:            Confirm Password:            Email:            Favorite Quote:            Register   -->       Name            Email            Password        Register -->      Name              Please enter a name.            Email              Please enter a valid email address.            Password              Please enter a password with at least 6 characters.        Register'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/item-todo/item-todo.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            todo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        todo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        todo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TodosService } from '../todos.service';\nimport { UsersAuthService } from '../users-auth.service';\n\ninterface Todo {\n  id: number;\n  todo: string;\n  completed: boolean;\n}\n\n@Component({\n  selector: 'app-item-todo',\n  templateUrl: './item-todo.component.html',\n  styleUrls: ['./item-todo.component.css']\n})\n\n\n\nexport class ItemTodoComponent {\n  todos: Todo[] = [\n    {\n      id: 1,\n      todo: \"Do something nice for someone I care about\",\n      completed: true,\n    },\n    { id: 2, todo: 'Memorize the fifty states and their capitals', completed: true },\n    { id: 3, todo: 'Watch a classic movie', completed: false }\n  ];\n\n  @Input() todo:any;\n  // @Output() deletee = new EventEmitter() ;\n  // @Output() favorited = new EventEmitter();\n  // @Output() completed = new EventEmitter();\n\n  constructor(private _router:Router,private _Todos:TodosService) { }\n\n\n\n  delete(todo:Todo):void\n  {\n    this._Todos.deleteTodo(todo)\n  }\n  showDetails() {\n    this._Todos.task = this.todos.find(todo => todo.id == this.todo.id)\n    this._router.navigate(['/todos', this.todo.id]);\n  }\n\n  // delete(todo: Todo): void {\n  //   const index = this.todos.findIndex(item => item.id === todo.id);\n  //   if (index !== -1) {\n  //     this.todos.splice(index, 1);\n  //   }\n  // }\n\n  // onFavorite() {\n  //   this.favorited.emit(this.todo.title);\n  // }\n\n  // onComplete() {\n  //   this.completed.emit(this.todo.title);\n  // }\n\n  onComplete(title: string) {\n    this._Todos.onComplete(title)\n  }\n\n    onFavorite(title: string) {\n    this._Todos.onFavorite(title);\n  }\n\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo-1.html":{"url":"interfaces/Todo-1.html","title":"interface - Todo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/todo-list/todo-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            todo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        todo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        todo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { TodosService } from '../todos.service';\n\n\ninterface Todo {\n  id: number;\n  todo: string;\n  completed: boolean;\n}\n\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\n\n\n\n\n\nexport class TodoListComponent {\n  constructor(private _todoServes:TodosService){}\n\n  todo :any ;\n  todos: Todo[] = [\n    {\n      id: 1,\n      todo: \"Do something nice for someone I care about\",\n      completed: true,\n    },\n    { id: 2, todo: 'Memorize the fifty states and their capitals', completed: true },\n    { id: 3, todo: 'Watch a classic movie', completed: false }\n  ];\n\n  newTodo: string = '';\n  searchTerm: string = '';\n  // name: string;\n  // favoriteQuote: string;\n  // todosCount: number;\n\n  // get filteredTodos(): Todo[] {\n  //   return this.todos.filter(todo => todo.todo.toLowerCase().includes(this.searchTerm.toLowerCase()));\n  // }\n\n    get filteredTodos(): Todo[] {\n    return this._todoServes.getAllTodo();\n  }\n\n  // onSubmit(): void {\n  //   if (this.newTodo.trim()) {\n  //     const newId = this.todos.length > 0 ? this.todos[this.todos.length - 1].id + 1 : 1;\n  //     const newTodo: Todo = {\n  //       id: newId,\n  //       todo: this.newTodo.trim(),\n  //       completed: false\n  //     };\n\n  //     this.todos.push(newTodo);\n  //     console.log(this.todos);\n\n  //     this.newTodo = '';\n  //   }\n  // }\n  onSubmit(): void {\n\n      if (this.newTodo.trim()) {\n      const newId = this.todos.length > 0 ? this.todos[this.todos.length - 1].id + 1 : 1;\n      const newTodo: Todo = {\n        id: newId,\n        todo: this.newTodo.trim(),\n        completed: false\n      };\n\n    this._todoServes.addTodo(newTodo)\n         this.newTodo = '';\n\n  }\n\n  }\n\n  delete(todo: Todo): void {\n    const index = this.todos.findIndex(item => item.id === todo.id);\n    if (index !== -1) {\n      this.todos.splice(index, 1);\n    }\n  }\n  // onFavorite(title: string) {\n  //   const index = this.todos.findIndex(todo => todo.title === title);\n  //   if (index !== -1) {\n  //     this.todos[index].favorite = !this.todos[index].favorite;\n  //   }\n  // }\n\n  onComplete(title: string) {\n    this._todoServes.onComplete(title)\n  }\n\n  getAllFavoriteTodos(){\n    this._todoServes.getAllFavoriteTodos()\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoDetailsComponentComponent.html":{"url":"components/TodoDetailsComponentComponent.html","title":"component - TodoDetailsComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoDetailsComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todo-details-component/todo-details-component.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-details-component\n            \n\n            \n                styleUrls\n                ./todo-details-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-details-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                singletodo\n                            \n                            \n                                todo\n                            \n                            \n                                todosid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                complete\n                            \n                            \n                                delete\n                            \n                            \n                                favorite\n                            \n                            \n                                getTodoById\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                todos\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    favoriteIcon\n                                \n                                \n                                    completedIcon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _Todos: TodosService, _activateRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/todo-details-component/todo-details-component.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _Todos\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _activateRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        todos\n                    \n                \n                \n                    \n                        Type :         Todos\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo-details-component/todo-details-component.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        complete\n                        \n                    \n                \n            \n            \n                \ncomplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-details-component/todo-details-component.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-details-component/todo-details-component.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favorite\n                        \n                    \n                \n            \n            \n                \nfavorite()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-details-component/todo-details-component.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodoById\n                        \n                    \n                \n            \n            \n                \ngetTodoById()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-details-component/todo-details-component.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-details-component/todo-details-component.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-details-component/todo-details-component.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        singletodo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-details-component/todo-details-component.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Todos | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-details-component/todo-details-component.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todosid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-details-component/todo-details-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        favoriteIcon\n                    \n                \n\n                \n                    \n                        getfavoriteIcon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/todo-details-component/todo-details-component.component.ts:83\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        completedIcon\n                    \n                \n\n                \n                    \n                        getcompletedIcon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/todo-details-component/todo-details-component.component.ts:87\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Todos } from '../todos';\nimport { TodosService } from '../todos.service';\n\n@Component({\n  selector: 'app-todo-details-component',\n  templateUrl: './todo-details-component.component.html',\n  styleUrls: ['./todo-details-component.component.css']\n})\n\nexport class TodoDetailsComponentComponent {\n  // todoid:any='';\n  @Input() todos!: Todos;\n  // @Input() todo: Todos;\n  todosid:any ;\n  id: string;\n  todo: Todos | undefined;\n  singletodo:any\n  // todo!: Todos;\n  constructor(private router: Router, private _Todos:TodosService ,private _activateRoute : ActivatedRoute) {\n    // console.log(this._activateRoute.snapshot.params['id']);\n    // this.id = this._activateRoute.snapshot.params['id']\n    // this.todosid = this._Todos.getTodoById(this.id)\n    // this.singletodo = _Todos.getTodoById(this.id)\n    // console.log(_Todos.getTodoById(this.id));\n\n    // this.getTodoById();\n\n    this.id = this._activateRoute.snapshot.params['id'];\n    this.todo = this._Todos.getTodoById(this.id);\n    console.log(this.id);\n\n  }\n  ngOnInit() {\n    // const _id = this._activateRoute.snapshot.paramMap.get('id');\n    // const _id = this._activateRoute.snapshot.params['id']\n\n    // console.log(_id);\n\n    // this.todo!= this._Todos.getTodoById(_id);\n  }\n  // todosid:any ;\n  // constructor(private router: Router, private _Todos:TodosService, private _activateRoute : ActivatedRoute) {\n\n\n  //  }\n  // showDetails() {\n  //   this.router.navigate(['/todos', this.todos.id]);\n  // }\n\n  // const id = +this.route.snapshot.paramMap.get('id');\n  //   this.todo = this.todoService.getTodoById(id);\n\n\n\n  getTodoById(): void {\n    // const id = this._activateRoute.snapshot.params['id']\n    this.todo!= this._Todos.getTodoById(this.id);\n  }\n\n  // getProductById(){\n  //   this._Todos.getTodoById(this.id).subscribe(\n  //     (res)=>{\n  //       this.product = res;\n  //     }\n  //   )\n  // }\n\n\n  delete() {\n  }\n\n  favorite() {\n  }\n\n  complete() {\n  }\n\n//  getTodoById(id: number) {\n//     return this._Todos.getTodoById(id);\n//   }\n  get favoriteIcon() {\n    return this.todos.favorite ? '★' : '☆';\n  }\n\n  get completedIcon() {\n    return this.todos.completed ? '✔' : '○';\n  }\n}\n\n    \n\n    \n        \n  \n    {{ singletodo.todo}}\n    {{ singletodo.id}}\n\n  \n -->\n\n\n  {{ todo.todo }}\n  Completed: {{ todo.completed }}\n\n\n -->\n\n\n  \n    Todo Details\n  \n  \n    {{ todo?.todo }}\n    {{ todo.description }} -->\n    {{ todo.date }} -->\n  \n\n\n    \n\n    \n                \n                    ./todo-details-component.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ singletodo.todo}}    {{ singletodo.id}}   -->  {{ todo.todo }}  Completed: {{ todo.completed }} -->      Todo Details        {{ todo?.todo }}    {{ todo.description }} -->    {{ todo.date }} -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoDetailsComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoListComponent.html":{"url":"components/TodoListComponent.html","title":"component - TodoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todo-list/todo-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-list\n            \n\n            \n                styleUrls\n                ./todo-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newTodo\n                            \n                            \n                                searchTerm\n                            \n                            \n                                todo\n                            \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                getAllFavoriteTodos\n                            \n                            \n                                onComplete\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filteredTodos\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_todoServes: TodosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/todo-list/todo-list.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _todoServes\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(todo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-list/todo-list.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllFavoriteTodos\n                        \n                    \n                \n            \n            \n                \ngetAllFavoriteTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-list/todo-list.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onComplete\n                        \n                    \n                \n            \n            \n                \nonComplete(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-list/todo-list.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-list/todo-list.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newTodo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Todo[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 1,\n      todo: \"Do something nice for someone I care about\",\n      completed: true,\n    },\n    { id: 2, todo: 'Memorize the fifty states and their capitals', completed: true },\n    { id: 3, todo: 'Watch a classic movie', completed: false }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filteredTodos\n                    \n                \n\n                \n                    \n                        getfilteredTodos()\n                    \n                \n                            \n                                \n                                    Defined in src/app/todo-list/todo-list.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TodosService } from '../todos.service';\n\n\ninterface Todo {\n  id: number;\n  todo: string;\n  completed: boolean;\n}\n\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\n\n\n\n\n\nexport class TodoListComponent {\n  constructor(private _todoServes:TodosService){}\n\n  todo :any ;\n  todos: Todo[] = [\n    {\n      id: 1,\n      todo: \"Do something nice for someone I care about\",\n      completed: true,\n    },\n    { id: 2, todo: 'Memorize the fifty states and their capitals', completed: true },\n    { id: 3, todo: 'Watch a classic movie', completed: false }\n  ];\n\n  newTodo: string = '';\n  searchTerm: string = '';\n  // name: string;\n  // favoriteQuote: string;\n  // todosCount: number;\n\n  // get filteredTodos(): Todo[] {\n  //   return this.todos.filter(todo => todo.todo.toLowerCase().includes(this.searchTerm.toLowerCase()));\n  // }\n\n    get filteredTodos(): Todo[] {\n    return this._todoServes.getAllTodo();\n  }\n\n  // onSubmit(): void {\n  //   if (this.newTodo.trim()) {\n  //     const newId = this.todos.length > 0 ? this.todos[this.todos.length - 1].id + 1 : 1;\n  //     const newTodo: Todo = {\n  //       id: newId,\n  //       todo: this.newTodo.trim(),\n  //       completed: false\n  //     };\n\n  //     this.todos.push(newTodo);\n  //     console.log(this.todos);\n\n  //     this.newTodo = '';\n  //   }\n  // }\n  onSubmit(): void {\n\n      if (this.newTodo.trim()) {\n      const newId = this.todos.length > 0 ? this.todos[this.todos.length - 1].id + 1 : 1;\n      const newTodo: Todo = {\n        id: newId,\n        todo: this.newTodo.trim(),\n        completed: false\n      };\n\n    this._todoServes.addTodo(newTodo)\n         this.newTodo = '';\n\n  }\n\n  }\n\n  delete(todo: Todo): void {\n    const index = this.todos.findIndex(item => item.id === todo.id);\n    if (index !== -1) {\n      this.todos.splice(index, 1);\n    }\n  }\n  // onFavorite(title: string) {\n  //   const index = this.todos.findIndex(todo => todo.title === title);\n  //   if (index !== -1) {\n  //     this.todos[index].favorite = !this.todos[index].favorite;\n  //   }\n  // }\n\n  onComplete(title: string) {\n    this._todoServes.onComplete(title)\n  }\n\n  getAllFavoriteTodos(){\n    this._todoServes.getAllFavoriteTodos()\n  }\n\n}\n\n    \n\n    \n        \n  So What we Gonne Do \n\n  \n\n    \n\n\n      \n        \n\n          \n          Add\n\n        \n\n\n      \n\n      \n\n      \n        \n       -->\n\n      \n\n      \n        \n          \n            \n            {{ todo.todo }}\n            Delete\n\n          \n         -->\n\n        \n\n        \n\n\n\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./todo-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  So What we Gonne Do                                         Add                                         -->                                                      {{ todo.todo }}            Delete                   -->                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'DeletedComponent', 'selector': 'app-deleted'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GetTodosByhttpComponent', 'selector': 'app-get-todos-byhttp'},{'name': 'ItemTodoComponent', 'selector': 'app-item-todo'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoDetailsComponentComponent', 'selector': 'app-todo-details-component'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todos.html":{"url":"interfaces/Todos.html","title":"interface - Todos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Todos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/todos.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            favorite\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isDeleted\n                                        \n                                \n                                \n                                        \n                                            todo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favorite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        favorite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDeleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDeleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        todo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        todo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Todos {\n    id: number;\n    todo: string;\n    completed: boolean;\n    favorite?:boolean;\n    description?: string;\n    isDeleted?: boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodosService.html":{"url":"injectables/TodosService.html","title":"injectable - TodosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TodosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/todos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isLiggedIn\n                            \n                            \n                                newTodo\n                            \n                            \n                                searchTerm\n                            \n                            \n                                    Public\n                                task\n                            \n                            \n                                todos\n                            \n                            \n                                todosArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                clearDeleted\n                            \n                            \n                                completedPercentage\n                            \n                            \n                                deletedCount\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                favoritesCount\n                            \n                            \n                                getAllFavoriteTodos\n                            \n                            \n                                getAllTodo\n                            \n                            \n                                getAllTodosByHttp\n                            \n                            \n                                getDeletedTodos\n                            \n                            \n                                getTodoById\n                            \n                            \n                                onComplete\n                            \n                            \n                                onFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/todos.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo(todos: Todos)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todos\n                                    \n                                                Todos\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearDeleted\n                        \n                    \n                \n            \n            \n                \nclearDeleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completedPercentage\n                        \n                    \n                \n            \n            \n                \ncompletedPercentage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedCount\n                        \n                    \n                \n            \n            \n                \ndeletedCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(todo: Todos)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todos\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favoritesCount\n                        \n                    \n                \n            \n            \n                \nfavoritesCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllFavoriteTodos\n                        \n                    \n                \n            \n            \n                \ngetAllFavoriteTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Todos[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTodo\n                        \n                    \n                \n            \n            \n                \ngetAllTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Todos[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTodosByHttp\n                        \n                    \n                \n            \n            \n                \ngetAllTodosByHttp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeletedTodos\n                        \n                    \n                \n            \n            \n                \ngetDeletedTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodoById\n                        \n                    \n                \n            \n            \n                \ngetTodoById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Todos | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onComplete\n                        \n                    \n                \n            \n            \n                \nonComplete(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFavorite\n                        \n                    \n                \n            \n            \n                \nonFavorite(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLiggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newTodo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Todos[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 1,\n      todo: \"Do something nice for someone I care about\",\n      completed: true,\n      favorite: true,\n    },\n    { id: 2, todo: 'Memorize the fifty states and their capitals', completed: true ,favorite: false, },\n    { id: 3, todo: 'Watch a classic movie', completed: false ,favorite: false, }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todosArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Todos[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Todos } from './todos';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodosService {\n  public isLiggedIn:boolean = false;\n  public task:any\n  constructor(private http: HttpClient){}\n  todos: Todos[] = [\n    {\n      id: 1,\n      todo: \"Do something nice for someone I care about\",\n      completed: true,\n      favorite: true,\n    },\n    { id: 2, todo: 'Memorize the fifty states and their capitals', completed: true ,favorite: false, },\n    { id: 3, todo: 'Watch a classic movie', completed: false ,favorite: false, }\n  ];\n  // getcategories(): Observable {\n  //   return this.httpClient.get(environment.baseUrl + 'categories');\n  // }\n  todosArray:Todos[]=[];\n\n\n  newTodo: string = '';\n  searchTerm: string = '';\n\n  addTodo(todos:Todos)\n  {\n      this.todos.push(todos);\n      console.log(this.todos);\n      // this.newTodo = '';\n  }\n\n  // getAllTodo():Todos[]\n  // {\n  //   return this.todos.slice()\n  // }\n  getAllTodo(): Todos[] {\n    return this.todos.filter(todo => !todo.isDeleted);\n  }\n\n\n  getDeletedTodos() {\n    //  return this.getAllTodo().filter(todo => todo.isDeleted);\n    return this.todos.filter(todo => todo.isDeleted);\n  }\n\n\n  // deleteTodo(todo:Todos)\n  // {\n  //   const index = this.todos.findIndex(item => item.id === todo.id);\n  //   if (index !== -1) {\n  //     this.todos.splice(index, 1);\n  //   }\n  // }\n\n  // deleteTodo(todo:Todos)\n  // {\n  //   const index = this.todos.indexOf(todo);\n  //   if (index !== -1) {\n  //     this.todos.splice(index, 1);\n  //   }\n  // }\n\n  deleteTodo(todo: Todos): void {\n    todo.isDeleted = true;\n  }\n\n  clearDeleted(): void {\n    this.todos = this.todos.filter(todo => !todo.isDeleted);\n  }\n\n  deletedCount(): number {\n    return this.todos.filter(todo => todo.isDeleted).length;\n  }\n\n  onFavorite(title: string) {\n    const index = this.todos.findIndex(todo => todo.todo === title);\n    if (index !== -1) {\n      this.todos[index].favorite = !this.todos[index].favorite;\n    }\n  }\n\n  onComplete(title: string) {\n    const index = this.todos.findIndex(todo => todo.todo === title);\n    if (index !== -1) {\n      this.todos[index].completed = true;\n    }\n  }\n\n  getAllFavoriteTodos(): Todos[] {\n    return this.todos.filter(todo => !todo.isDeleted && todo.favorite);\n  }\n\n  getAllTodosByHttp(): Observable {\n    return this.http.get('https://dummyjson.com/todos');\n  }\n\n  // deletedCount() {\n  //   return this.todos.filter(todo => todo.deleted).length;\n  // }\n  // completedPercentage() {\n  //   const completedCount = this.todos.filter(todo => todo.completed).length;\n  //   const totalCount = this.todos.length;\n  //   return Math.round((completedCount / totalCount) * 100);\n  // }\n  // favoritesCount() {\n  //   return this.todos.filter(todo => todo.favorite).length;\n  // }\n  favoritesCount(): number {\n    return this.todos.filter(todo => todo.favorite).length;\n    // console.log(this.todos.filter(todo => todo.favorite).length);\n\n  }\n  getTodoById(id: string): Todos | undefined {\n    // return this.todos.find((todo) => todo.id === parseInt(id:number));\n    return this.todos.find((todo: any) => todo.id === parseInt(id, 10));\n  }\n\n  // getProductById(id: number): Observable {\n  //   return this..get\n  // }\n\n  // completedPercentage(): number {\n  //   const completedTodos = this.todos.filter(todo => todo.completed);\n  //   return completedTodos.length / this.todos.length * 100;\n  // }\n  completedPercentage(): number {\n  const completedTodos = this.todos.filter(todo => todo.completed && !todo.isDeleted);\n  const totalTodos = this.todos.filter(todo => !todo.isDeleted);\n  const percentage = (completedTodos.length / totalTodos.length) * 100;\n  return percentage || 0;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Users.html":{"url":"interfaces/Users.html","title":"interface - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            favoriteQuote\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            img\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favoriteQuote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        favoriteQuote:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        img\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        img:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Users {\n  id: number;\n  username: string;\n  name: string;\n  password: string;\n  img: string;\n  email: string;\n  favoriteQuote: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersAuthService.html":{"url":"injectables/UsersAuthService.html","title":"injectable - UsersAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users-auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                email\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                isLoggedInn\n                            \n                            \n                                    Private\n                                loggedInUser\n                            \n                            \n                                password\n                            \n                            \n                                    Private\n                                username\n                            \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                getIsLoggedIn\n                            \n                            \n                                getLoggedInUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/users-auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users-auth.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ngetIsLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users-auth.service.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedInUser\n                        \n                    \n                \n            \n            \n                \ngetLoggedInUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users-auth.service.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users-auth.service.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users-auth.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users-auth.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(name: string, email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users-auth.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(user: Users)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users-auth.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Users\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://dummyjson.com/auth'\n                    \n                \n                    \n                        \n                                Defined in src/app/users-auth.service.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/users-auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users-auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/users-auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedInn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/users-auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/users-auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users-auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/users-auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/users-auth.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { catchError, map, Observable, of } from 'rxjs';\nimport { Users } from './users';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersAuthService {\n  // UsersloginService:EventEmitter= new EventEmitter();\n\n  private isAuthenticated: boolean = false;\n  private username: string = '';\n   isLoggedInn = false;\n\n  email!: string;\n  password!: string;\n  private users: Users[] = [];\n  private loggedInUser:any=null;\n  //  isLoggedIn = false;\n   private currentUser: string | null = null;\n\n    // private users = [\n    //   { id: 1, name: 'mahmoud', favoriteQuote: 'php' },\n    //   { id: 2, name: 'islam', favoriteQuote: 'sql' },\n    //   { id: 3, name: 'khaled', favoriteQuote: 'node' },\n    // ];\n\n    // private users = [\n    //   { id: 1, name: 'mahmoud', favoriteQuote: 'sql', username: 'mahmoud', password: '123' },\n    //   { id: 2, name: 'islam', favoriteQuote: 'node', username: 'islam', password: '123' }\n    // ];\n\n    // private loggedInUser: any = null;\n\n    constructor(private http: HttpClient) {   const storedUsers = localStorage.getItem('users');\n    if (storedUsers) {\n      this.users = JSON.parse(storedUsers);\n    }\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      this.currentUser = storedUser;\n    }\n\n  }\n\n  // login(username: string, password: string): Observable {\n  //   const user = this.users.find(u => u.username === username && u.password === password);\n  //   if (user) {\n  //     this.loggedInUser = user;\n  //     localStorage.setItem('loggedInUser', JSON.stringify(user));\n  //     return of(true);\n  //   } else {\n  //     return of(false);\n  //   }\n  // }\n//  .subscribe(response => {\n//   console.log(response);\n// });\n  // onSubmitt(email:string,password:string):Observable{\n  //   const data = { email: email, password: password };\n  //   return this.http.post('https://dummyjson.com/auth/login', data)\n  // }\n\n\n  private baseUrl = 'https://dummyjson.com/auth';\n\n\n  // login(username: string, password: string) {\n  //   const url = `${this.baseUrl}/login`;\n  //   const body = { username, password };\n  //   // this.isLoggedInn = true;\n  //   // this.isLoggedIn = true;\n  //   // this.currentUser = username;\n  //   return this.http.post(url, body)\n  // }\n  login(username: string, password: string): Observable {\n    const url = `${this.baseUrl}/login`;\n    const body = { username, password };\n    return this.http.post(url, body).pipe(\n      map((response: any) => {\n        if (response) {\n          this.currentUser = username;\n          localStorage.setItem('currentUser', username);\n          return true;\n        } else {\n          return false;\n        }\n      }),\n      catchError((error) => {\n        console.error('Error during login:', error);\n        return of(false);\n      })\n    );\n  }\n\n  // login(username: string, password: string): Observable {\n  //   const url = `${this.baseUrl}/login`;\n  //   const body = { username, password };\n  //   return this.http.post(url, body).pipe(\n  //     map((response: any) => {\n  //       // const token = response.token;\n  //       if (response) {\n  //         return this.isLoggedIn = true;\n  //         // return this.currentUser = username;\n  //         console.log(this.isLoggedIn );\n\n  //          true;\n  //       } else {\n  //         return false;\n  //       }\n  //     }),\n  //     catchError((error) => {\n  //       // Handle any errors that occurred during the login process\n  //       console.error('Error during login:', error);\n  //       return of(false);\n  //     })\n  //   );\n  // }\n\n  // login(username: string, password: string): Observable {\n  //   const url = `${this.baseUrl}/login`;\n  //   const body = { username, password };\n  //   return this.http.post(url, body).pipe(\n  //     map((response: any) => {\n  //       if (response) {\n  //         this.isLoggedIn = true;\n  //         this.currentUser = username;\n  //         return true;\n  //       } else {\n  //         return false;\n  //       }\n  //     }),\n  //     catchError((error) => {\n  //       console.error('Error during login:', error);\n  //       return of(false);\n  //     })\n  //   );\n  // }\n\n  register(name: string, email: string, password: string) {\n    const url = `https://dummyjson.com/users/add`;\n    const body = { name, email, password };\n    return this.http.post(url, body);\n  }\n\n    // login(name: string,favoriteQuote: string) {\n    //   const user = this.users.find(u => u.name === name && u.favoriteQuote === favoriteQuote);\n\n    //   if (user) {\n    //     this.loggedInUser = user;\n    //     return true;\n    //   } else {\n    //     return false;\n    //     console.log('error users auth ');\n\n    //   }\n    // }\n\n    // login(username: string, password: string) {\n    //   // Check if user with given username and password exists in the users array\n    //   const user = this.users.find(u => u.username === username && u.password === password);\n\n    //   if (user) {\n    //     // Store user information in local storage\n    //     localStorage.setItem('currentUser', JSON.stringify(user));\n    //     return true;\n    //   } else {\n    //     return false;\n    //   }\n    // }\n\n  //  logout() {\n  //     this.loggedInUser = null;\n  //   }\n\n  signUp(user: Users): Observable {\n    const existingUser = this.users.find(u => u.username === user.username);\n    if (existingUser) {\n      return of(false);\n    } else {\n      user.id = this.users.length + 1;\n      this.users.push(user);\n      localStorage.setItem('users', JSON.stringify(this.users));\n      return of(true);\n    }\n  }\n\n    // logout(): void {\n    //   this.loggedInUser = null;\n    //   localStorage.removeItem('loggedInUser');\n    //   this.isLoggedInn = false;\n    //   this.isLoggedIn = false;\n    // this.currentUser = '';\n    // }\n\n    logout() {\n      this.currentUser = null;\n      localStorage.removeItem('currentUser');\n    }\n\n    // getIsLoggedIn(): Observable {\n    //   return of(this.isLoggedIn());\n    // }\n\n    isLoggedIn(): boolean {\n      return this.currentUser !== null;\n    }\n\n    getCurrentUser(): string | null {\n      return this.currentUser;\n    }\n\n    // getCurrentUser(): string {\n    //   return this.currentUser;\n    // }\n    // isLoggedIn(): boolean {\n    //   return !!this.loggedInUser;\n    // }\n\n    getLoggedInUser(): Users {\n      return this.loggedInUser;\n    }\n\n\n    getIsLoggedIn(): Observable {\n      return of(this.isLoggedIn());\n    }\n\n    // getIsLoggedIn() {\n    //   return this.isLoggedInn;\n    // }\n    // isLoggedIn() {\n    //   return this.loggedInUser !== null;\n    // }\n\n    // getLoggedInUser() {\n    //   return this.loggedInUser;\n    // }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/comments.service.ts\n            \n            injectable\n            CommentsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/commnt-int.interceptor.ts\n            \n            interceptor\n            CommntIntInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/deleted/deleted.component.ts\n            \n            component\n            DeletedComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/get-todos-byhttp/get-todos-byhttp.component.ts\n            \n            component\n            GetTodosByhttpComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/item-todo/item-todo.component.ts\n            \n            component\n            ItemTodoComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/item-todo/item-todo.component.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/todo-details-component/todo-details-component.component.ts\n            \n            component\n            TodoDetailsComponentComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/todo-list/todo-list.component.ts\n            \n            component\n            TodoListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/todo-list/todo-list.component.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/todos.service.ts\n            \n            injectable\n            TodosService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/todos.ts\n            \n            interface\n            Todos\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/types/BatteryManager.ts\n            \n            interface\n            BatteryManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/types/Navigator.ts\n            \n            interface\n            Navigator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/users-auth.service.ts\n            \n            injectable\n            UsersAuthService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/users.ts\n            \n            interface\n            Users\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            battery-level : ^3.0.0\n        \n            bootstrap : ^5.2.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLab1\nThis project was generated with Angular CLI version 15.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nDeletedComponent\n\nDeletedComponent\n\nAppModule -->\n\nDeletedComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGetTodosByhttpComponent\n\nGetTodosByhttpComponent\n\nAppModule -->\n\nGetTodosByhttpComponent->AppModule\n\n\n\n\n\nItemTodoComponent\n\nItemTodoComponent\n\nAppModule -->\n\nItemTodoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTodoDetailsComponentComponent\n\nTodoDetailsComponentComponent\n\nAppModule -->\n\nTodoDetailsComponentComponent->AppModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nAppModule -->\n\nTodoListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCommntIntInterceptor\n\nCommntIntInterceptor\n\nAppModule -->\n\nCommntIntInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
